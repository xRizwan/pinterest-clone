{"version":3,"sources":["images/logo.svg","images/github-logo.png","images/home-decor/1.jpg","images/home-decor/2.jpg","images/home-decor/3.jpg","images/home-decor/4.jpg","images/home-decor/5.jpg","images/home-decor/6.jpg","images/home-decor/7.jpg","images/dinner/1.jpg","images/dinner/2.jpg","images/dinner/3.jpg","images/dinner/4.jpg","images/dinner/5.jpg","images/dinner/6.jpg","images/dinner/7.jpg","images/logo-design/1.jpg","images/logo-design/2.jpg","images/logo-design/3.jpg","images/logo-design/4.jpg","images/logo-design/5.jpg","images/logo-design/6.jpg","images/logo-design/7.jpg","images/new-outfit/1.jpg","images/new-outfit/2.jpg","images/new-outfit/3.jpg","images/new-outfit/4.jpg","images/new-outfit/5.jpg","images/new-outfit/6.jpg","images/new-outfit/7.jpg","actions/index.js","config/config.js","Components/MainHeader.js","images/index.js","Components/MainPage.js","Components/Header-SearchedUsers.js","Components/Header-Messages.js","Components/Header-SearchedTags.js","Components/Header-MainSearch.js","Components/Header.js","Components/Settings-Edit.js","Components/Settings-Account.js","Components/Preferences.js","Components/Settings.js","Components/PhotoGrid-Photo.js","Components/PhotoGrid.js","Components/UserProfile-Tabs.js","Components/UserProfile.js","Components/dropzone/DropZone.js","Components/CreatePin.js","Components/Main.js","Components/PinInfo-Comment.js","Components/PinInfo.js","Components/Following.js","Components/UserFollowing-UserBox.js","Components/UserFollowing.js","Components/UserFollowers.js","Components/Search.js","Components/Messages-SearchedUsers.js","Components/UserMessages-Search.js","Components/UserInfo.js","Components/UserMessages-Messenger.js","Components/UserMessages-RoomBox.js","Components/UserMessages-ChatRooms.js","Components/UserMessages-MessageBox.js","Components/UserMessages-ChatData.js","Components/UserMessages.js","Components/About.js","App.js","serviceWorker.js","reducers/isLogged.js","reducers/saveUID.js","reducers/targetReducer.js","reducers/roomReducer.js","reducers/userReducer.js","reducers/index.js","index.js"],"names":["module","exports","setTarget","data","type","payload","setUser","fire","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","googleProvider","GoogleAuthProvider","db","firestore","d","Date","initialState","signupEmail","signupPassword","age","loginEmail","loginPassword","signupErr","loginErr","reducer","state","field","value","Header","mobileRef","useRef","infoRef","useState","login","changeLogin","signup","changeSignup","overlay","changeOverlay","loader","changeLoader","isLogged","useSelector","dispatcher","useDispatch","useEffect","hideMobile","window","innerWidth","current","classList","add","addEventListener","removeEventListener","signupClick","loginClick","closeModal","useReducer","dispatch","handleChange","e","target","name","Fragment","to","className","src","logo","alt","onClick","mainDiv","parentElement","contains","remove","style","backgroundColor","ref","placeholder","onChange","preventDefault","includes","length","createUserWithEmailAndPassword","then","result","uid","user","collection","doc","set","username","catch","err","setTimeout","firstElementChild","textContent","message","provider","FacebookAuthProvider","addScope","signInWithPopup","birthday","additionalUserInfo","profile","birthyear","substr","getFullYear","merge","signInWithEmailAndPassword","get","snapshot","home","require","dinner","design","outfit","MainPage","text","color","textRef","imagesRef","currentType","abortController","AbortController","counter","interval","setInterval","childs","children","i","newText","newColor","firstChild","console","log","clearInterval","abort","resize","display","loading","SearchedUsers","props","foundUsers","map","cur","curIndex","hideMessagePanel","data-id","data-username","key","Messages","hideAll","changeHide","changeMessage","searched","changeSearched","changeFoundUsers","foundTarget","changeFoundTarget","tobeSent","changeToBeSent","query","changeQuery","queryId","changeQueryId","usersRef","msgRef","msgInfoRef","onKeyUp","currentUser","documents","docs","arr","forEach","userID","id","firstName","lastName","profileImage","fullData","toLowerCase","push","hider","clickFunc","element","mainTarget","parentNode","dataset","userId","storeReference","roomName","messageName","date","dated","getUTCDate","day","getUTCDay","year","getUTCFullYear","month","getUTCMonth","FieldValue","serverTimestamp","by","monthUTC","dayUTC","yearUTC","dateUTC","userRoomsRef","alert","SearchedTags","foundTags","setFoundTags","noneFound","setNoneFound","qData","snapshots","snap","hidden","index","makeSmaller","MainSearch","setQuery","isHidden","setIsHidden","closeBtnRef","inputRef","containerRef","accountRef","notifRef","mobileContainerRef","mobileBarRef","homeRef","followingRef","homeMobileRef","followingMobileRef","accountIcon","changeIcon","lastMessages","changeLastMessages","logRedirect","changeLogRedirect","setUsername","image","closeSettings","signOutUser","closeTabs","signOut","getRooms","React","useCallback","totalUserRooms","Promise","resolve","reject","onSnapshot","property","error","getLastMessages","rooms","room","filter","fullArr","changeTab","changeMobileTab","userChatRoomsRef","href","EditProfile","displayModal","changeModalDisplay","defaultInputs","changeDefault","profile_img","changeProfileImage","loaderRef","fileRef","about","location","resetInput","mainClass","firstNameMain","lastNameMain","usernameMain","aboutMain","locationMain","split","join","userReference","collectionGroup","where","update","storageRef","file","files","filename","metadeta","contentType","disabled","child","put","getDownloadURL","url","AccountSettings","passRef","oldPassRef","showModal","changeShowModal","userData","userAge","userEmail","email","userGender","gender","oldPass","newPass","newAgain","closeModals","options","label","test","Number","option","credential","EmailAuthProvider","reauthenticateWithCredential","updatePassword","Preferences","multiValue","changeValue","prefOptions","changeOptions","obj","preferencesRef","allTags","preferences","delete","isMulti","Settings","currentTab","changeCurrent","redirect","changeRedirect","selectedRef","eTarget","tabName","Photo","setHidden","deletable","docId","imageData","load","data-title","data-postid","data-by","data-tag","PhotoGrid","displayedImages","setDisplayedImages","totalImages","setTotalImages","setLoading","pref","following","orderBy","saved","totalArr","displayArr","imageInfo","title","tag","shift","trackScrolling","wrappedElement","document","getElementById","isBottom","prevstate","el","getBoundingClientRect","bottom","innerHeight","UserProfileTabs","personalRef","savedRef","showPersonal","setShowPersonal","savedPinData","setSavedPinData","showSaved","setShowSaved","mainId","postId","Profile","params","useParams","changeUserData","found","changeFound","isCurrent","changeIsCurrent","changeLoading","isFollowed","changeIsFollowed","changeFollowing","followers","changeFollowers","changeMainId","userid","ID","userinfo","mainData","fullName","followingAmount","loggedInUserId","isUser","DropZone","selectedFile","setSelectedFile","errorMessage","setErrorMessage","fileInputRef","modalRef","modalImageRef","handleFiles","validateFile","handleImageChange","indexOf","onDragOver","onDragEnter","onDragLeave","onDrop","dataTransfer","click","backgroundImage","reader","FileReader","readAsDataURL","onload","openImageModal","fileName","substring","lastIndexOf","fileType","size","Math","floor","parseFloat","pow","toFixed","fileSize","invalid","CreatePin","titleErrorRef","tagErrorRef","aboutErrorRef","pcRef","tagOptions","setRedirect","createdTag","userInfo","width","height","handleTagChange","submitPost","tagToBeAdded","metadata","documentIdentification","uuidv4","task","fullPath","comments","created","Timestamp","fromDate","path","docRef","Main","setPreferences","tags","setTags","selectedTags","setSelectedTags","getTags","selectTag","dataName","selected","splice","data-name","Comment","commentData","likes","setLikes","setProfileImage","setName","isLiked","setIsLiked","isDeleted","setIsDeleted","setIsCurrent","commenter","profileData","post","commentId","comment","commentBy","likedBy","prevState","likeStoreRef","commentStoreRef","totalComments","changeComments","PinInfo","pinid","allComments","setAllComments","numberOfComments","setNumberOfComments","pinInfo","setPinInfo","setUserInfo","userFollowers","setUserFollowers","sendToMain","setSendToMain","setComment","setIsFollowed","commentAreaRef","commentRef","saveRef","cancelRef","cancelComment","rel","download","savedOn","savedBy","Following","setFollowing","UserBox","setUserData","UserFollowing","followedUsers","setFollowedUsers","userKey","followingUsers","setFollowingUsers","Search","searchid","setFoundUsers","setCurrentUser","reset","UserSearch","buttonRef","hideButton","UserInfo","Messenger","setMessage","targetId","firstTime","lastMessageBy","lastSeenBy","lastMessageDate","members","RoomBox","roomData","setroomData","lastMessage","setLastMessage","finishedLoading","setFinishedLoading","userRef","mainMember","messageData","mainBy","setRoom","ChatRooms","setRooms","unsub","hasPendingWrites","MessageBox","messageBoxRef","Chats","messages","setMessages","UserMessages","roomInfo","About","github","App","onAuthStateChanged","basename","process","exact","MainHeader","Boolean","hostname","match","logReducer","action","uidReducer","targetReducer","roomReducer","userReducer","allReducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd79fea9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2ef023c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/github-logo.db8e55d7.png\";","module.exports = __webpack_public_path__ + \"static/media/1.b047be5e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.e1c6b8df.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.673f8e5b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.051a1f9b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.388508d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.1df8e185.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.051a1f9b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.436db242.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.c90b145c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.f36af292.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.a5f61f72.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.4dbab528.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.66848e65.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.c9172389.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.3f531bbe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.4bb34761.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.ad68e2cf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.a53f486a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.e5dce415.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.7700c65c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.eece83c3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.6e0bdcce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.433c7d12.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.8973b91d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.6b0882f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.fd6da5c0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.05005ecb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.67358dae.jpg\";","export const loginUser = () => {\r\n    return {\r\n        type: \"LOG_IN\"\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n    return {\r\n        type: \"LOG_OUT\"\r\n    }\r\n}\r\n\r\nexport const setUid = (data) => {\r\n    return {\r\n        type: \"SAVE\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const resetUid = () => {\r\n    return {\r\n        type: \"RESET\"\r\n    }\r\n}\r\n\r\nexport const setTarget = (data) => {\r\n    return {\r\n        type: \"SETTARGET\",\r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport const resetTarget = () => {\r\n    return {\r\n        type : \"RESETTARGET\"\r\n    }\r\n}\r\n\r\nexport const setRoom = (data) => {\r\n    return {\r\n        type: \"SET_ROOM\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const resetRoom = () => {\r\n    return {\r\n        type: \"RESET_ROOM\"\r\n    }\r\n}\r\n\r\nexport const setUser = (data) => {\r\n    return {\r\n        type: \"SET_USER\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const resetUser = () => {\r\n    return {\r\n        type: \"RESET_USER\"\r\n    }\r\n}","import * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nlet firebaseConfig = {\r\n    apiKey: \"AIzaSyCalm9N86_5dsMM1Nc5Asi2d4V6EhuHZyw\",\r\n    authDomain: \"xpinterest-clone.firebaseapp.com\",\r\n    databaseURL: \"https://xpinterest-clone.firebaseio.com\",\r\n    projectId: \"xpinterest-clone\",\r\n    storageBucket: \"xpinterest-clone.appspot.com\",\r\n    messagingSenderId: \"267519282006\",\r\n    appId: \"1:267519282006:web:a09a0a07bd59313c4464f7\",\r\n    measurementId: \"G-7XT73EPBH3\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default fire;","import React, { useRef, useEffect, useState, useReducer } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { loginUser } from '../actions/';\r\nimport './styles/MainPage.css';\r\nimport logo from '../images/logo.svg';\r\nimport fire from '../config/config';\r\nimport * as firebase from 'firebase/app'\r\nimport 'firebase/auth';\r\n\r\nconst auth = fire.auth();\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\r\nconst db = fire.firestore();\r\nconst d = new Date();\r\n\r\nconst initialState = {\r\n    signupEmail: '',\r\n    signupPassword: '',\r\n    age: '',\r\n    loginEmail: '',\r\n    loginPassword: '',\r\n    signupErr: '',\r\n    loginErr: '',\r\n}\r\n\r\nfunction reducer(state, {field, value}){\r\n    return {\r\n        ...state,\r\n        [field]: value,\r\n    }\r\n}\r\n\r\nfunction Header() {\r\n    let mobileRef = useRef();\r\n    let infoRef = useRef();\r\n    let [login, changeLogin] = useState(false);\r\n    let [signup, changeSignup] = useState(false);\r\n    let [overlay, changeOverlay] = useState(false);\r\n    let [loader, changeLoader] = useState(false);\r\n    let isLogged = useSelector(state => state.isLogged);\r\n    let dispatcher = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // close the mobile nav automatically if screen gets bigger than 589px\r\n        const hideMobile = () => {\r\n            if(window.innerWidth > 589){\r\n                mobileRef.current.classList.add('hide');\r\n            }\r\n        }\r\n        window.addEventListener('resize', hideMobile)\r\n\r\n        return () => {window.removeEventListener('resize', hideMobile)}\r\n    }, [])\r\n\r\n    // mobile menu\r\n    const openMenu = (e) => {\r\n        let mainDiv = e.target.parentElement.parentElement.parentElement;\r\n\r\n        // if mobile menu is open then close it else open it\r\n        if (mobileRef.current.classList.contains('hide')){\r\n            mobileRef.current.classList.remove('hide');\r\n            mobileRef.current.classList.add('animate');\r\n\r\n            mainDiv.classList.remove('white');\r\n            mainDiv.style.backgroundColor = '#f3f3f3';\r\n        } else {\r\n            mobileRef.current.classList.add('hide');\r\n            mainDiv.classList.add('white');\r\n        }\r\n    }\r\n\r\n    // show signup modal\r\n    const signupClick = () => {\r\n        changeOverlay(true);\r\n        changeSignup(true);\r\n    }\r\n    // show login modal\r\n    const loginClick = () => {\r\n        changeOverlay(true);\r\n        changeLogin(true);\r\n    }\r\n    // close any modal open\r\n    const closeModal = () => {\r\n        changeOverlay(false);\r\n        changeSignup(false);\r\n        changeLogin(false);\r\n    }\r\n    \r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    const handleChange = (e) => {\r\n        dispatch({field: e.target.name, value: e.target.value})\r\n    }\r\n    \r\n    // eslint-disable-next-line\r\n    const {signupEmail, signupPassword, age, loginEmail, loginPassword, signupErr, loginErr} = state;\r\n\r\n\r\n    // signup with email and password\r\n    const submitSignup = (e) => {\r\n        e.preventDefault();\r\n\r\n        // form-checking\r\n        if (signupEmail === '' || !signupEmail.includes('@') || !signupEmail.includes('.com')){\r\n            dispatch({field : \"signupErr\", value: 'Please Enter a Valid Email'});\r\n            return;\r\n        }\r\n        else if(signupPassword.length < 8){\r\n            dispatch({field: \"signupErr\", value: \"Password Must Be More Than 7 Letters\"});\r\n            return;\r\n        }\r\n        else if(age === ''){\r\n            dispatch({field: \"signupErr\", value: \"Please Enter Your Age\"});\r\n            return;\r\n        } else {\r\n            dispatch({field: \"signupErr\", value: \"\"});\r\n        }\r\n        changeLoader(true);\r\n        auth.createUserWithEmailAndPassword(signupEmail, signupPassword).then((result) => {\r\n\r\n            let uid = result.user.uid;\r\n\r\n            db.collection('users').doc(uid).set({age : age, username: uid,}).then(() => {\r\n                //closeModal();\r\n                // show success info\r\n                //alert(\"success\");\r\n            })\r\n\r\n        }).catch(err => () => {\r\n            \r\n            infoRef.current.classList.remove('hide');\r\n            setTimeout(() => {infoRef.current.classList.add('hide')}, 2500)\r\n            infoRef.current.firstElementChild.textContent = err.message;\r\n            changeLoader(false);\r\n        });\r\n    }\r\n\r\n\r\n    // login with email and password\r\n    const loginSubmit = (e) => {\r\n        // prevent reload\r\n        e.preventDefault();\r\n        changeLoader(true);\r\n        // sign-in with email and password\r\n        auth.signInWithEmailAndPassword(loginEmail, loginPassword).then(() => {\r\n\r\n            //dispatcher(loginUser());\r\n            //changeLoader(false);\r\n\r\n        }).catch((err) => {\r\n            infoRef.current.classList.remove('hide');\r\n            setTimeout(() => {infoRef.current.classList.add('hide')}, 2500)\r\n            infoRef.current.firstElementChild.textContent = err.message;\r\n            changeLoader(false);\r\n        })\r\n    }\r\n\r\n    // authentication with gmail\r\n    const googleAuth = (e) => {\r\n        changeLoader(true);\r\n        auth.signInWithPopup(googleProvider).then(result => {\r\n            let uid = result.user.uid;\r\n\r\n            //closeModal();\r\n            //dispatcher(loginUser());\r\n                    \r\n            db.collection('users').doc(uid).set({\r\n                username: uid,\r\n            }, {merge: true}).then(() => {\r\n                //dispatcher(loginUser());\r\n            })\r\n                //changeLoader(false);\r\n                //dispatcher(loginUser());\r\n            \r\n        }).catch(err => {\r\n            infoRef.current.classList.remove('hide');\r\n            setTimeout(() => {infoRef.current.classList.add('hide')}, 2500)\r\n            infoRef.current.firstElementChild.textContent = err.message;\r\n            changeLoader(false);\r\n        })\r\n    }\r\n\r\n\r\n    // created a seperate google auth for login\r\n    // as for signup had to create a doc in the firestore\r\n    const googleAuthLogin = (e) => {\r\n        changeLoader(true);\r\n        auth.signInWithPopup(googleProvider).then(result => {\r\n            let uid = result.user.uid;\r\n\r\n            //closeModal();\r\n            //dispatcher(loginUser());\r\n\r\n            db.collection('users').doc(uid).get().then(snapshot => {\r\n                let username = '';\r\n                if(!!snapshot.data()){\r\n                    username = snapshot.data().username;\r\n                }\r\n                // if username does not exist\r\n                if(!(!!username) || username === ''){\r\n                    \r\n                    db.collection('users').doc(uid).set({\r\n                        username: uid,\r\n                    }, {merge: true}).then(() => {\r\n                        dispatcher(loginUser());\r\n                    })\r\n                //changeLoader(false);\r\n                //dispatcher(loginUser());\r\n                }\r\n            })\r\n            \r\n        }).catch(err => {\r\n            infoRef.current.classList.remove('hide');\r\n            setTimeout(() => {infoRef.current.classList.add('hide')}, 2500)\r\n            infoRef.current.firstElementChild.textContent = err.message;\r\n            changeLoader(false);\r\n        })\r\n    }\r\n    \r\n    // facebook signup\r\n    const facebookAuth = () => {\r\n        changeLoader(true);\r\n        const provider = new firebase.auth.FacebookAuthProvider();\r\n        provider.addScope('user_birthday');\r\n        auth.signInWithPopup(provider).then(result => {\r\n\r\n            // getting users age\r\n            let birthday = result.additionalUserInfo.profile.birthday;\r\n            let birthyear = birthday.substr(birthday.length - 4, birthday.length);\r\n            let today = d.getFullYear();\r\n            let age = today - birthyear;\r\n            // user id\r\n            let uid = result.user.uid;\r\n            // saving users age in doc\r\n            db.collection('users').doc(uid).set({\r\n                age: age,\r\n                username: uid,\r\n            }, {merge: true})\r\n\r\n        }).catch(err => {\r\n            // show message\r\n            infoRef.current.classList.remove('hide');\r\n            setTimeout(() => {infoRef.current.classList.add('hide')}, 2500)\r\n            infoRef.current.firstElementChild.textContent = err.message;\r\n            changeLoader(false);\r\n        })\r\n    }\r\n\r\n    // facebook login\r\n    const facebookAuthLogin = () => {\r\n        changeLoader(true);\r\n        const provider = new firebase.auth.FacebookAuthProvider();\r\n        provider.addScope('user_birthday');\r\n        auth.signInWithPopup(provider).then(result => {\r\n\r\n            // getting users age\r\n            let birthday = result.additionalUserInfo.profile.birthday;\r\n            let birthyear = birthday.substr(birthday.length - 4, birthday.length);\r\n            let today = d.getFullYear();\r\n            let age = today - birthyear;\r\n            // user id\r\n            let uid = result.user.uid;\r\n            // saving users age in doc\r\n            db.collection('users').doc(uid).set({\r\n                age: age,\r\n            }, {merge: true})\r\n\r\n        }).catch(err => {\r\n            // show message\r\n            infoRef.current.classList.remove('hide');\r\n            setTimeout(() => {infoRef.current.classList.add('hide')}, 2500)\r\n            infoRef.current.firstElementChild.textContent = err.message;\r\n            changeLoader(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            {isLogged ? <Redirect to=\"/main\" /> : ''}\r\n\r\n            <nav>\r\n                <div className=\"nav-wrapper white\">\r\n                    <div className=\"left brand-logo red-text text-darken-2\">\r\n                        <img src={logo} alt=\"logo\" className=\"logo\" />\r\n                        Pinterest\r\n                    </div>\r\n                    \r\n\r\n                    <div className=\"right hide-on-med-and-up black-text\">\r\n                        <div className=\"mobile-trigger\" onClick={openMenu}>\r\n                            <i className=\"material-icons\">menu</i>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"right hide-on-small-only\">\r\n                        <ul className=\"nav-links\">\r\n                                <li className=\"nav-link link1\">\r\n                                    <Link className=\"black-text\" to=\"/about\">\r\n                                        About\r\n                                    </Link>\r\n                                </li>\r\n                            <li>\r\n                                <button\r\n                                    className=\"nav-link login-btn\"\r\n                                    onClick={loginClick}>\r\n                                        Log-In\r\n                                </button>\r\n                            </li>\r\n                            <li>\r\n                                <button\r\n                                    className=\"nav-link signup-btn\"\r\n                                    onClick={signupClick}>\r\n                                    Sign-Up\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n\r\n                    <br />\r\n                    <div ref={mobileRef} className=\"black-text nav-list hide\">\r\n                        <Link className=\"black-text\" to=\"/about\">\r\n                            <div className=\"list-item\">About</div>\r\n                        </Link>\r\n                        <div className=\"list-item\" onClick={loginClick}>LogIn</div>\r\n                        <div className=\"list-item\" onClick={signupClick}>SignUp</div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div ref={infoRef} className={`info-modal hide`}>\r\n                <p className=\"info-text\">Success</p>\r\n            </div>\r\n\r\n            <div className={`overlay ${overlay ? '' : 'hide'}`}></div>\r\n            <div className={`form-modal headings ${signup ? '' : 'hide'}`}>\r\n                <div className=\"right\">\r\n                    <i\r\n                        className=\"material-icons black-text close\"\r\n                        onClick={closeModal}>\r\n                        close\r\n                    </i>\r\n                </div>\r\n                <div className=\"center\">\r\n                    <img className=\"modal-logo\" alt=\"logo\" src={logo}></img>\r\n                    <h4 className=\"heading-text\">Welcome to Pinterest</h4>\r\n                    <p className=\"subheading-text\">Find new ideas to try</p>\r\n                </div>\r\n                <div\r\n                    className={`center offset-top red-text\r\n                    ${signupErr !== '' ? '' : 'hide'}`}>\r\n                    {signupErr}\r\n                </div>\r\n                <form className=\"form-control\">\r\n                    <div className=\"input-control\">\r\n                        <i className=\"material-icons prefix\">email</i>\r\n                        <div className=\"center input-field\">\r\n                            <input\r\n                                name=\"signupEmail\"\r\n                                type=\"email\" \r\n                                placeholder=\"Email\" \r\n                                value={signupEmail}\r\n                                onChange={handleChange}\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"input-control\">\r\n                        <i className=\"material-icons prefix\">info</i>\r\n                        <div className=\"center input-field\">\r\n                            <input\r\n                                name=\"signupPassword\"\r\n                                type=\"text\"\r\n                                placeholder=\"Password\" \r\n                                onChange={handleChange}\r\n                                value={signupPassword}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-control\">\r\n                        <i className=\"material-icons prefix\">account_box</i>\r\n                        <div className=\"center input-field\">\r\n                            <input name=\"age\" type=\"number\" placeholder=\"Age\"\r\n                            value={age} onChange={handleChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"center\">\r\n                        <button className=\"button\" onClick={submitSignup}>Continue</button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"center\">\r\n                    <p className=\"subheading-text bold-weight\">OR</p>\r\n                </div>\r\n                <div className=\"center\">\r\n                    <button onClick={facebookAuth} className=\"fake-button fb-btn\">\r\n                        <i className=\"material-icons white-text social-icon\">menu</i>\r\n                        <span>Continue with Facebook</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"center\">\r\n                    <button className=\"fake-button gg-btn\" onClick={googleAuth}>\r\n                        <i className=\"material-icons black-text social-icon\">menu</i>\r\n                        <span>Continue with Google</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"center offset-top\">\r\n                    <p\r\n                        className=\"subheading-text link bold-weight\"\r\n                        onClick={() => {closeModal(); loginClick()}}>\r\n                        Already a Member? Log In\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            {/*Login Modal*/}\r\n            <div className={`form-modal login-modal headings ${login ? '' : 'hide'}`}>\r\n                <div className=\"right\">\r\n                    <i\r\n                        className=\"material-icons black-text close\"\r\n                        onClick={closeModal}>\r\n                        close\r\n                    </i>\r\n                </div>\r\n                <div className=\"center\">\r\n                    <img className=\"modal-logo\" alt=\"logo\" src={logo}></img>\r\n                    <h4 className=\"heading-text\">Welcome to Pinterest</h4>\r\n                    <p className=\"subheading-text\">Find new ideas to try</p>\r\n                </div>\r\n                <div className=\"center offset-top red-text hide\">{}</div>\r\n                <form className=\"form-control\">\r\n                    <div className=\"input-control\">\r\n                        <i className=\"material-icons prefix\">email</i>\r\n                        <div className=\"center input-field\">\r\n                            <input\r\n                                name=\"loginEmail\" value={loginEmail}\r\n                                type=\"email\" placeholder=\"Email\" onChange={handleChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"input-control\">\r\n                        <i className=\"material-icons prefix\">info</i>\r\n                        <div className=\"center input-field\">\r\n                            <input\r\n                                name=\"loginPassword\" value={loginPassword}\r\n                                type=\"text\" placeholder=\"Password\" onChange={handleChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"center\">\r\n                        <button className=\"button\" onClick={loginSubmit}>Login</button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"center\">\r\n                    <p className=\"subheading-text bold-weight\">OR</p>\r\n                </div>\r\n                <div className=\"center\">\r\n                    <button onClick={facebookAuthLogin} className=\"fake-button fb-btn\">\r\n                        <i className=\"material-icons white-text social-icon\">menu</i>\r\n                        <span>Continue with Facebook</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"center\">\r\n                    <button onClick={googleAuthLogin} className=\"fake-button gg-btn\">\r\n                        <i className=\"material-icons black-text social-icon\">menu</i>\r\n                        <span>Continue with Google</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {loader ? <img src={logo} alt=\"loading\" className=\"loader mainpage-loader\" /> : ''}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Header;","// home decor photos\r\nlet home1 = require('./home-decor/1.jpg');\r\nlet home2 = require('./home-decor/2.jpg');\r\nlet home3 = require('./home-decor/3.jpg');\r\nlet home4 = require('./home-decor/4.jpg');\r\nlet home5 = require('./home-decor/5.jpg');\r\nlet home6 = require('./home-decor/6.jpg');\r\nlet home7 = require('./home-decor/7.jpg');\r\n\r\nexport const home = [home1, home2, home3, home4, home5, home6, home7];\r\n\r\n// dinner photos\r\nlet dinner1 = require('./dinner/1.jpg');\r\nlet dinner2 = require('./dinner/2.jpg');\r\nlet dinner3 = require('./dinner/3.jpg');\r\nlet dinner4 = require('./dinner/4.jpg');\r\nlet dinner5 = require('./dinner/5.jpg');\r\nlet dinner6 = require('./dinner/6.jpg');\r\nlet dinner7 = require('./dinner/7.jpg');\r\n\r\nexport const dinner = [dinner1, dinner2, dinner3, dinner4, dinner5, dinner6, dinner7];\r\n\r\n// design photos\r\nlet design1 = require('./logo-design/1.jpg');\r\nlet design2 = require('./logo-design/2.jpg');\r\nlet design3 = require('./logo-design/3.jpg');\r\nlet design4 = require('./logo-design/4.jpg');\r\nlet design5 = require('./logo-design/5.jpg');\r\nlet design6 = require('./logo-design/6.jpg');\r\nlet design7 = require('./logo-design/7.jpg');\r\n\r\nexport const design = [design1, design2, design3, design4, design5, design6, design7];\r\n\r\n// outfit photos\r\nlet outfit1 = require('./new-outfit/1.jpg');\r\nlet outfit2 = require('./new-outfit/2.jpg');\r\nlet outfit3 = require('./new-outfit/3.jpg');\r\nlet outfit4 = require('./new-outfit/4.jpg');\r\nlet outfit5 = require('./new-outfit/5.jpg');\r\nlet outfit6 = require('./new-outfit/6.jpg');\r\nlet outfit7 = require('./new-outfit/7.jpg');\r\n\r\nexport const outfit = [outfit1, outfit2, outfit3, outfit4, outfit5, outfit6, outfit7];","import React, {useState, useRef, useEffect} from 'react';\r\nimport './styles/MainPage.css';\r\nimport {home, design, dinner, outfit} from '../images/';\r\n\r\nexport default function MainPage(){\r\n\r\n    // text to be shown on the screen\r\n    // eslint-disable-next-line\r\n    const [text, changeText] = useState([\r\n        {text: \"weekend dinner idea\", color: '#ffab00', type: dinner},\r\n        {text: \"home decor idea\", color: '#009688', type: home},\r\n        {text: \"new look outfit\", color: 'dodgerblue', type: outfit},\r\n        {text: \"logo design idea\", color: '#d84315', type: design},\r\n    ]);;\r\n\r\n    // reference to the element in which text will be shown\r\n    let textRef = useRef();\r\n    // reference to the element that contains images that will change\r\n    let imagesRef = useRef();\r\n    let currentType = useRef(text[0].type);\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n        let counter = 1;\r\n        textRef.current.style.color = \"#ffab00\";\r\n\r\n        const interval = setInterval(() => {\r\n            \r\n            // adding animation class\r\n            let childs = imagesRef.current.children;\r\n            for (let i = 0; i < childs.length; i++){\r\n                childs[i].classList.remove(`anim${i + 1}`);\r\n            }\r\n            // setting the new text and color\r\n            let newText = text[counter]['text'];\r\n            let newColor = text[counter]['color'];\r\n\r\n            // change text and color\r\n            textRef.current.textContent = newText;\r\n            textRef.current.style.color = newColor;\r\n            currentType.current = text[counter].type;\r\n\r\n            // reset the counter when it's equal to the length of the texts array\r\n            if(counter !== text.length - 1){\r\n                counter = counter + 1;\r\n            } else {\r\n                counter = 0;\r\n            }\r\n\r\n            // changing pictures\r\n            for (let i = 0; i < childs.length; i++){\r\n                let image = childs[i].firstChild;\r\n                image.src = currentType.current[i];\r\n            }\r\n\r\n            // adding animation class\r\n            setTimeout(() => {\r\n                for (let i = 0; i < childs.length; i++){\r\n                    childs[i].classList.add(`anim${i+1}`);\r\n                }\r\n            }, 5500)\r\n\r\n        }, 10000)\r\n\r\n        return () => {\r\n            console.log('aborting main page');\r\n            clearInterval(interval);\r\n            abortController.abort();\r\n        }\r\n    \r\n    }, [text, currentType, ])\r\n\r\n    // handling resize to hide/show images;\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        const resize = () => {\r\n            if(window.innerWidth < 700){\r\n                imagesRef.current.style.display = 'none';\r\n            } else {\r\n                imagesRef.current.style.display = 'block';\r\n            }\r\n        }\r\n\r\n        if(window.innerWidth < 700){\r\n            imagesRef.current.style.display = 'none';\r\n        }\r\n\r\n        window.addEventListener('resize', resize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', resize);\r\n            abortController.abort();\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"main-body\">\r\n            <div className=\"center main-text\">Get your next</div>\r\n            <div ref={textRef} className=\"center main-text\">{text[0].text}</div>\r\n            <div ref={imagesRef} className=\"row hide-on-small-only\">\r\n                <div className=\"col l1\">\r\n                    <img className=\"anim-img1\" loading={\"lazy\"} alt=\"img1\" src={dinner[6]}></img>\r\n                </div>\r\n                <div className=\"col l1\">\r\n                    <img className=\"anim-img2\" loading={\"lazy\"} alt=\"img1\" src={dinner[0]}></img>\r\n                </div>\r\n                <div className=\"col l1\">\r\n                    <img className=\"anim-img3\" loading={\"lazy\"} alt=\"img1\" src={dinner[1]}></img>\r\n                </div>\r\n                <div className=\"col l1\">\r\n                    <img className=\"anim-img4\" loading={\"lazy\"} alt=\"img1\" src={dinner[2]}></img>\r\n                </div>\r\n                <div className=\"col l1\">\r\n                    <img className=\"anim-img5\" loading={\"lazy\"} alt=\"img1\" src={dinner[3]}></img>\r\n                </div>\r\n                <div className=\"col l1\">\r\n                    <img className=\"anim-img6\" loading={\"lazy\"} alt=\"img1\" src={dinner[4]}></img>\r\n                </div>\r\n                <div className=\"col l1\">\r\n                    <img className=\"anim-img7\" loading={\"lazy\"} alt=\"img1\" src={dinner[5]}></img>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function SearchedUsers(props){\r\n    \r\n    return(\r\n        <div className=\"searched-users container\">\r\n            {props.foundUsers.map((cur, curIndex) => {\r\n                return(\r\n                    <Link to=\"/messages\">\r\n                    <div\r\n                        className=\"row searched-user\"\r\n                        onClick={props.hideMessagePanel}\r\n                        data-id={cur[4]} data-username={cur[0]}\r\n                        key={curIndex}>\r\n\r\n                        <div className=\"col l1\">\r\n                            { cur[3] !== '' ?\r\n                            <img \r\n                                className=\"account-image searched-image\"\r\n                                src={cur[3]}\r\n                                alt={`${cur[0]}`} \r\n                            /> : \r\n                            <i \r\n                                className=\"material-icons account-icon searched-icon\">\r\n                                account_circle\r\n                            </i>}\r\n                        </div>\r\n                        <div className=\"col l3\">\r\n                            <div\r\n                                className=\"searched-name bold-weight\">\r\n                                {`${cur[1]} ${cur[2]}`}\r\n                            </div>\r\n                            <div className=\"searched-name searched-username\">\r\n                                {cur[4]}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </Link>\r\n                )\r\n            })}\r\n            </div>\r\n            \r\n    )\r\n}","import React, {useState, useRef} from 'react';\r\nimport SearchedUsers from './Header-SearchedUsers';\r\nimport * as firebase from 'firebase/app';\r\n\r\nexport default function Messages(props){\r\n\r\n    // states\r\n    let [hideAll, changeHide] = useState(false);\r\n    let [message, changeMessage] = useState(true);\r\n    let [searched, changeSearched] = useState(false);\r\n    let [foundUsers, changeFoundUsers] = useState([]);\r\n    let [foundTarget, changeFoundTarget] = useState(false);\r\n    let [tobeSent, changeToBeSent] = useState('');\r\n    let [query, changeQuery] = useState('');\r\n    let [queryId, changeQueryId] = useState('');\r\n\r\n    // refs\r\n    const usersRef = useRef();\r\n\r\n    const displayMessagePanel = () => {\r\n        changeHide(true);\r\n        changeMessage(false);\r\n    }\r\n\r\n    const hideMessagePanel = () => {\r\n        changeHide(false);\r\n        changeMessage(true);\r\n    }\r\n\r\n    // control component\r\n    const handleQueryChange = (e) => {\r\n        changeQuery(e.target.value);\r\n    }\r\n\r\n    // function to find users from firebase that match the query\r\n    const checkUsers = (e) => {\r\n\r\n        // the current user\r\n        let user = firebase.auth().currentUser;\r\n\r\n        // value typed by the user\r\n        let query = e.target.value;\r\n\r\n        // if input is empty then return;\r\n        if(query.length === 0){\r\n            changeFoundUsers([]);\r\n            return;\r\n        }\r\n        // refernce to the firestore\r\n        const storeReference = firebase.firestore().collection('users');\r\n\r\n        storeReference.get().then((snapshot) => {\r\n            let documents = snapshot.docs;\r\n            let arr = [];\r\n\r\n            // going over each document\r\n            documents.forEach(doc => {\r\n                // all data from the store\r\n                let data = doc.data();\r\n\r\n                // document id represents a user id;\r\n                let userID = doc.id;\r\n\r\n                // if the user is the same then ignore\r\n                if (userID === user.uid){\r\n                    return;\r\n                }\r\n\r\n                // getting specified fields from the data\r\n                let {firstName, lastName, username, profileImage} = data;\r\n\r\n                // in case data does not exist replace with placeholder values\r\n                firstName = !!firstName ? firstName : '';\r\n                lastName = !!lastName ? lastName : '';\r\n                username = !!username ? username : '';\r\n                profileImage = !!profileImage ? profileImage : '';\r\n\r\n                // saving data and the id in an array\r\n                let fullData = [username, firstName, lastName, profileImage, userID];\r\n\r\n                // combining all names for easier search\r\n                let fullName = `${firstName.toLowerCase()} ${lastName.toLowerCase()} ${username.toLowerCase()}`;\r\n                \r\n                if(fullName.includes(query.toLowerCase())){\r\n                    arr.push(fullData);\r\n                }\r\n                else if(userID.includes(query)){\r\n                    arr.push(fullData);\r\n                }\r\n            })\r\n\r\n            // if no user found replace with no user found\r\n            if (arr.length === 0){\r\n                arr = [[\"\", \"No\", \"User Found\", \"\", \"\"]]\r\n            }\r\n\r\n            // updating state\r\n            changeFoundUsers(arr);\r\n            changeSearched(true);\r\n            if(foundTarget){\r\n                changeFoundTarget(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    const makeScrollable = () => {\r\n        usersRef.current.classList.add('found-users');\r\n        usersRef.current.classList.add('blue-border');\r\n    }\r\n\r\n    const removeScollable = () => {\r\n\r\n        usersRef.current.classList.remove('found-users');\r\n        usersRef.current.classList.remove('blue-border');\r\n\r\n        // reset search data\r\n        changeSearched(false);\r\n        changeFoundUsers([]);\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        //\r\n        let element = e.target;\r\n        let mainTarget = '';\r\n\r\n        // find the element with the data-id for that particular user\r\n        while(element.parentNode) {\r\n            let classes = element.classList;\r\n            if(classes.contains('row')){\r\n                mainTarget = element;\r\n                break;\r\n            }\r\n            else {\r\n                element = element.parentNode;\r\n            }\r\n        }\r\n\r\n        let username = mainTarget.dataset.username;\r\n        let userId = mainTarget.dataset.id;\r\n\r\n        if (!!username){\r\n            changeQuery(username);\r\n        } else {\r\n            changeQuery(userId);\r\n        }\r\n\r\n        changeQueryId(userId);\r\n        changeFoundTarget(true);\r\n        changeSearched(false);\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        let query = queryId;\r\n\r\n        if(foundTarget){\r\n            if(tobeSent === ''){\r\n                return;\r\n            }\r\n            // handling database modelling for chat rooms\r\n            const user = firebase.auth().currentUser;\r\n            let storeReference = firebase.firestore().collection('chatrooms');\r\n            storeReference.get().then(snapshot => {\r\n\r\n                // making dynamic room name\r\n                let roomName = `chat_${user.uid < query ? user.uid+ '_' + query : query + '_' + user.uid}`;\r\n                \r\n                // creating a collection and calculating message number and saving message\r\n                storeReference.doc(roomName).collection('messages').get().then(snapshot => {\r\n\r\n                    let length = snapshot.docs.length;\r\n                    let messageName = `message${length + 1}`;\r\n\r\n                    // getting date\r\n                    let date = new Date();\r\n                    let dated = date.getUTCDate();;\r\n                    let day = date.getUTCDay();\r\n                    let year = date.getUTCFullYear();\r\n                    let month = date.getUTCMonth();\r\n\r\n                    // saving the chat room\r\n                    storeReference.doc(roomName).collection('messages').doc(messageName).set({\r\n                        text: tobeSent,\r\n                        date: firebase.firestore.FieldValue.serverTimestamp(),\r\n                        by: user.uid,\r\n                        monthUTC: month,\r\n                        dayUTC: day,\r\n                        yearUTC: year,\r\n                        dateUTC: dated,\r\n                    }).then(() => {\r\n\r\n                        // adding to users chat rooms\r\n                        let userRoomsRef = firebase.firestore().collection('userChatrooms');\r\n                        userRoomsRef.doc(user.uid).set({\r\n                            [roomName]: true,\r\n                            lastSeen: firebase.firestore.FieldValue.serverTimestamp(),\r\n                        }, {merge: true})\r\n\r\n                        userRoomsRef.doc(query).set({[roomName] : true}, {merge: true});\r\n\r\n                        alert('success')\r\n                        hideMessagePanel();\r\n                        changeQuery('');\r\n                        changeToBeSent('');\r\n                    })\r\n                })\r\n            })\r\n        } else {\r\n            alert('Please enter A Valid User')\r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"right drop-down messages hide\" ref={props.msgRef}>\r\n            <div className={`subheading-text center ${hideAll ? 'hide' : ''}`}>\r\n                <span\r\n                    className=\"msg-heading bold-weight\">Inbox</span>\r\n                <span className=\"right msg-icons\">\r\n                    <i\r\n                        className=\"material-icons msg-icon\"\r\n                        onClick={displayMessagePanel}>\r\n                        edit\r\n                    </i>\r\n                </span>\r\n\r\n                <div>Send a message</div>\r\n            </div>\r\n\r\n            <div className={`hide ${hideAll ? 'hide' : ''}`}>\r\n                <h3\r\n                    ref={props.msgInfoRef}\r\n                    className=\"bold-weight msg-text\">\r\n                    Share ideas with your friends\r\n                </h3>\r\n            </div>\r\n\r\n            <div className={`new-message ${message ? \"hide\" : ''}`}>\r\n                <div className={`subheading-text`}>\r\n                    <span\r\n                        className=\"msg-heading bold-weight\">New Message</span>\r\n                    <span className=\"right msg-icons\">\r\n                        <button\r\n                            className=\"s-button message-cancel\"\r\n                            onClick={hideMessagePanel}>\r\n                                Cancel\r\n                        </button>\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"message-to-input\">\r\n                    <div className=\"search-box\">\r\n                        <span className=\"bold-weight search-text\">To:</span>\r\n                        <span>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"s-input search-user\"\r\n                                value={query}\r\n                                onKeyUp={checkUsers} \r\n                                onClick={makeScrollable}\r\n                                onChange={handleQueryChange}/>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div ref={usersRef} className=\"\">\r\n                        {searched ? <SearchedUsers hider={hideMessagePanel} clickFunc={handleClick} foundUsers={foundUsers}/>: ''}\r\n                        </div>\r\n\r\n                <div className=\"send-message-input\">\r\n                    <hr />\r\n                    <div className=\"input-box\">\r\n                        <input \r\n                            placeholder=\"Add a message\"\r\n                            type=\"text\"\r\n                            value={tobeSent}\r\n                            onChange={(e) => {changeToBeSent(e.target.value)}}\r\n                            className=\"s-input message-user\"\r\n                            onClick={removeScollable}\r\n                        />\r\n                        <i className=\"material-icons send-icon\" onClick={sendMessage}>send</i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport * as firebase from 'firebase/app';\r\n\r\nexport default function SearchedTags(props){\r\n    let [foundTags, setFoundTags] = useState([]); \r\n    let [noneFound, setNoneFound] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        if(props.qData === ''){\r\n            setFoundTags([]);\r\n            setNoneFound(true);\r\n            return;\r\n        }\r\n\r\n        let arr = [];\r\n\r\n        let ref = firebase.firestore().collection('tags');\r\n        ref.get()\r\n        .then(snapshots => snapshots.docs)\r\n        .then(snapshot => {\r\n            if(snapshot.length === 0){\r\n                setNoneFound(true);\r\n                setFoundTags([]);\r\n                return;\r\n            }\r\n\r\n            snapshot.forEach(snap => {\r\n                let name = snap.data().name;\r\n                if(name.includes(props.qData.toLowerCase())){\r\n                    arr.push(name);\r\n                    setNoneFound(false);\r\n                }\r\n            })\r\n        })\r\n        .then(() => {\r\n            console.log(arr);\r\n            setFoundTags(arr);\r\n        })\r\n\r\n        return () => {\r\n            console.log('aborting tag search')\r\n            abortController.abort();\r\n        }\r\n    }, [props.qData])\r\n\r\n    return(\r\n        <div\r\n            className={`found-panel big-container \r\n                        ${props.hidden === true ? 'hide' : ''}`}>\r\n            {foundTags.map((cur, index) => {\r\n                return(\r\n                    <Link to={`/search/${cur}`} onClick={() => {props.makeSmaller()}} key={index}>\r\n                        <div\r\n                            className=\"left black-text\">\r\n\r\n                                <div className=\"boxed bordered\">\r\n\r\n                                    {cur}\r\n\r\n                                </div>\r\n\r\n                        </div>\r\n\r\n                        <br />\r\n                    </Link>\r\n                )\r\n            })}\r\n            {noneFound ? <div className=\"center special-boxed\">No Results</div> : ''}\r\n        </div>\r\n    )\r\n}","import React, {useState, useRef} from 'react';\r\nimport SearchedTags from './Header-SearchedTags';\r\n\r\nexport default function MainSearch(props){\r\n    const [query, setQuery] = useState('');\r\n    const [isHidden, setIsHidden] = useState(true);\r\n    const closeBtnRef = useRef();\r\n    const inputRef = useRef();\r\n    const containerRef = useRef();\r\n\r\n    function handleChange(e){\r\n        setQuery(e.target.value);\r\n    }\r\n    \r\n    function makeBigger(e){\r\n        e.target.classList.add('big-input');\r\n        containerRef.current.classList.add('big-container');\r\n        closeBtnRef.current.classList.remove('hide');\r\n        setIsHidden(false);\r\n    }\r\n\r\n    function makeSmaller(e){\r\n        inputRef.current.classList.remove('big-input');\r\n        containerRef.current.classList.remove('big-container');\r\n        closeBtnRef.current.classList.add('hide');\r\n        setQuery('');\r\n        setIsHidden(true);\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div ref={containerRef} className=\"col center l4 m2 input-field search-bar-container\">\r\n                <i className=\"material-icons\">search</i>\r\n                <input\r\n                    ref={inputRef}\r\n                    onChange={handleChange}\r\n                    onClick={makeBigger}\r\n                    id=\"search\"\r\n                    type=\"text\"\r\n                    placeholder=\"Search\"\r\n                    value={query}\r\n                />\r\n                <button\r\n                    ref={closeBtnRef}\r\n                    onClick={makeSmaller}\r\n                    className=\"s-button blackbg-color hide white-text\">\r\n                        X\r\n                </button>\r\n                <SearchedTags qData={query} hidden={isHidden} makeSmaller={makeSmaller}/>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}","import React, { useRef, useEffect, useState } from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport logo from '../images/logo.svg';\r\nimport * as firebase from 'firebase/app';\r\nimport './styles/Welcome.css';\r\nimport Messages from './Header-Messages';\r\nimport MainSearch from './Header-MainSearch';\r\n\r\nexport default function Header(){\r\n    let accountRef = useRef();\r\n    let notifRef = useRef();\r\n    let msgRef = useRef();\r\n    let msgInfoRef = useRef();\r\n    let mobileContainerRef = useRef();\r\n    let mobileBarRef = useRef();\r\n    let homeRef = useRef();\r\n    let followingRef = useRef();\r\n    let homeMobileRef = useRef();\r\n    let followingMobileRef = useRef();\r\n    let [accountIcon, changeIcon] = useState('');\r\n    let [lastMessages, changeLastMessages] = useState([]);\r\n    let [logRedirect, changeLogRedirect] = useState(false);\r\n    let [username, setUsername] = useState('');\r\n    const isLogged = useSelector(state => state.isLogged)\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        if (isLogged){\r\n            let user = firebase.auth().currentUser;\r\n            if(!!user){\r\n                let storeReference = firebase.firestore().collection('users').doc(user.uid);\r\n                storeReference.get().then(snapshot => {\r\n                    if(!!snapshot.data()){\r\n                        let image = snapshot.data().profileImage;\r\n                        let username = snapshot.data().username;\r\n                        if (!!image){\r\n                            changeIcon(image);\r\n                        }\r\n                        setUsername(username);\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            console.log('aborting header');\r\n            abortController.abort()\r\n        }\r\n    }, [isLogged, ])\r\n\r\n    const closeSettings = () => {\r\n        accountRef.current.classList.add('hide');\r\n        notifRef.current.classList.add('hide');\r\n        msgRef.current.classList.add('hide');\r\n    }\r\n\r\n    const openSettings = () => {\r\n\r\n        // display drop-down if hidden\r\n        if (accountRef.current.classList.contains('hide')){\r\n            closeSettings();\r\n            accountRef.current.classList.remove('hide');\r\n        }\r\n        // close if already displayed\r\n        else {\r\n            closeSettings();\r\n        }\r\n    }\r\n\r\n    const openNotifications = () => {\r\n\r\n        // display drop-down if hidden\r\n        if (notifRef.current.classList.contains('hide')){\r\n            closeSettings();\r\n            notifRef.current.classList.remove('hide');\r\n        }\r\n        // close if already displayed\r\n        else {\r\n            closeSettings();\r\n        }\r\n    }\r\n\r\n    const openMessages = () => {\r\n\r\n        // display drop-down if hidden\r\n        if (msgRef.current.classList.contains('hide')){\r\n            closeSettings();\r\n            msgRef.current.classList.remove('hide');\r\n            let user = firebase.auth().currentUser;\r\n            // references to firebase firestore collections\r\n            let userChatRoomsRef = firebase.firestore().collection('userChatrooms').doc(user.uid);\r\n            let totalUserRooms = [];\r\n\r\n            getRooms(userChatRoomsRef, totalUserRooms).then((result) => {\r\n                getLastMessages(result);\r\n            })\r\n        }\r\n        // close if already displayed\r\n        else {\r\n            closeSettings();\r\n        }\r\n    }\r\n\r\n    const signOutUser = () => {\r\n        closeTabs();\r\n        closeSettings();\r\n        firebase.auth().signOut().then(() => {\r\n            changeLogRedirect(true);\r\n        })\r\n    }\r\n\r\n    // get the rooms user is in\r\n    const getRooms= React.useCallback((ref, totalUserRooms) => {\r\n        return new Promise((resolve, reject) => {\r\n            ref.onSnapshot(snapshot => {\r\n                let data = snapshot.data();\r\n                for (let property in data){\r\n                    if (property === 'lastSeen'){\r\n                        continue;\r\n                    } else {\r\n                        totalUserRooms.push(property);\r\n                    }\r\n                }\r\n                resolve(totalUserRooms);\r\n            },(error) =>  reject(error))\r\n        })\r\n    }, [])\r\n\r\n    const getLastMessages = (rooms) => {\r\n        let arr = []\r\n        rooms.forEach(room => {\r\n            let ref = firebase.firestore().collection('chatrooms').doc(room).collection('messages');\r\n            ref.get().then(snapshot => {\r\n                let documents = snapshot.docs;\r\n                documents.filter((cur, index, fullArr) => {\r\n                    if(!fullArr[index + 1]){\r\n                        console.log(cur.data());\r\n                        arr.push(cur.data());\r\n                    }\r\n                    return 0;\r\n                })\r\n            }).then(result => {\r\n                changeLastMessages(arr);\r\n            })\r\n        })\r\n    }\r\n\r\n    const changeTab = (e) => {\r\n        if(e.target === homeRef.current){\r\n            homeRef.current.classList.add('selected');\r\n            followingRef.current.classList.remove('selected');\r\n        } else {\r\n            homeRef.current.classList.remove('selected');\r\n            followingRef.current.classList.add('selected');\r\n        }\r\n    }\r\n\r\n    const changeMobileTab = (e) => {\r\n        if(e.target === homeMobileRef.current){\r\n            homeMobileRef.current.classList.add('selected');\r\n            followingMobileRef.current.classList.remove('selected');\r\n        } else {\r\n            homeMobileRef.current.classList.remove('selected');\r\n            followingMobileRef.current.classList.add('selected');\r\n        }\r\n    }\r\n\r\n    const closeTabs = () => {\r\n        homeMobileRef.current.classList.remove('selected');\r\n        homeRef.current.classList.remove('selected');\r\n        followingMobileRef.current.classList.remove('selected');\r\n        followingRef.current.classList.remove('selected');\r\n    }\r\n\r\n    const openMobileMenu = (e) => {\r\n        if(mobileBarRef.current.classList.contains('hide')){\r\n            mobileBarRef.current.classList.remove('hide');\r\n        } else {\r\n            mobileBarRef.current.classList.add('hide');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {logRedirect ? <Redirect to={`/`} /> : ''}\r\n            <nav className=\"padded white black-text\">\r\n                <div className=\"nav-wrapper\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col l3 hide-on-med-and-down\">\r\n                            <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                            <Link to=\"/main\">\r\n                                <span\r\n                                    ref={homeRef}\r\n                                    onClick={changeTab}\r\n                                    className={`tab black-text bold-weight selected ${isLogged ? '' : 'hide'}`}>\r\n                                        Home\r\n                                </span>\r\n                            </Link>\r\n                            <Link to=\"/following\">\r\n                            <span\r\n                                ref={followingRef}\r\n                                onClick={changeTab}\r\n                                className={`tab black-text bold-weight ${isLogged ? '' : 'hide'}`}>\r\n                                    Following\r\n                            </span>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div className=\"col l2 hide-on-large-only\">\r\n                            <img className=\"logo\" src={logo} alt=\"logo\"></img>\r\n                            <Link to=\"/main\">\r\n                                <span\r\n                                    ref={homeMobileRef}\r\n                                    onClick={changeMobileTab}\r\n                                    className={`tab bold-weight black-text selected ${isLogged ? '' : 'hide'}`}>\r\n                                        Home\r\n                                </span>\r\n                            </Link>\r\n                            <Link to=\"/following\">\r\n                                <span\r\n                                    ref={followingMobileRef}\r\n                                    onClick={changeMobileTab}\r\n                                    className={`tab black-text bold-weight ${isLogged ? '' : 'hide'}`}>\r\n                                        Following\r\n                                </span>\r\n                            </Link>\r\n                        </div>\r\n                        <MainSearch />\r\n                        <div className=\"\">\r\n                            <div ref={mobileContainerRef}\r\n                                className={`col l3 right greyBgColor flexed hide-on-med-and-up ${!isLogged ? 'hide' : ''}`}>\r\n                                    <i\r\n                                        className=\"material-icons pin-icon\"\r\n                                        onClick={openMobileMenu}>\r\n                                        menu\r\n                                    </i>\r\n                            </div>\r\n                            <div className=\"col l12 right hide show-animate greyBgColor\" ref={mobileBarRef}>\r\n                                <div className=\"purpColor pointer\" onClick={signOutUser}>Logout</div>\r\n                                <Link to={`/user/${username}`}>\r\n                                <div className=\"purpColor pointer\" onClick={closeTabs}>Account</div>\r\n                                </Link>\r\n                                <Link\r\n                                    to=\"/main/settings\" onClick={closeTabs}>\r\n                                    <div className=\"purpColor\">Settings</div>\r\n                                </Link>\r\n                                <Link\r\n                                    to=\"/messages\" onClick={closeTabs}>\r\n                                    <div className=\"purpColor\">Messages</div>\r\n                                </Link>\r\n                                <Link\r\n                                    to=\"/create-a-pin\" onClick={closeTabs}>\r\n                                    <div className=\"purpColor\">Create A Pin</div>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`col l3 right flexed hide-on-small-only ${!isLogged ? 'hide' : ''}`}>\r\n                            <i\r\n                                className=\"material-icons icon center\"\r\n                                onClick={openSettings}>\r\n                                keyboard_arrow_down\r\n                            </i>\r\n                            {\r\n                            accountIcon === '' ?\r\n                                <Link to={`/user/${username}`} onClick={closeTabs}>\r\n                                    <i \r\n                                    className=\"material-icons icon center\"\r\n                                    onClick={closeTabs}>\r\n                                    account_circle\r\n                                    </i>\r\n                                </Link>\r\n                                : \r\n                                <Link to={`/user/${username}`} onClick={closeTabs}>\r\n                                    <img\r\n                                        src={accountIcon}\r\n                                        className=\"account-image header-icon\"\r\n                                        alt=\"icon\"\r\n                                        onClick={closeTabs}\r\n                                    />\r\n                                </Link>\r\n                            }\r\n                            <i \r\n                                className=\"material-icons icon center\"\r\n                                onClick={openMessages}>\r\n                                textsms\r\n                            </i>\r\n                            <i \r\n                                className=\"material-icons icon center\"\r\n                                onClick={openNotifications}>\r\n                                notifications\r\n                            </i>\r\n                        </div>\r\n                        <div className={`col l3 right flexed ${isLogged ? 'hide' : ''}`}>\r\n                            <a href={'https://xrizwan.github.io/pinterest-clone/'}>\r\n                                <button className=\"s-button redbg-color\">Login</button>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right drop-down account hide\" ref={accountRef}>\r\n                        <div className=\"subheading-text\">Accounts</div>\r\n                        <Link\r\n                            to=\"/main/settings\" \r\n                            onClick={closeTabs}\r\n                            className=\"bold-weight account-link black-text\">\r\n                                Settings\r\n                        </Link>\r\n                        <br />\r\n                        <Link\r\n                            to=\"/create-a-pin\" onClick={closeTabs}>\r\n                            <div className=\"bold-weight account-link black-text\">\r\n                                Create Pin\r\n                            </div>\r\n                        </Link>\r\n                        <div\r\n                            className=\"bold-weight account-link\"\r\n                            onClick={signOutUser}>\r\n                            Logout\r\n                        </div>\r\n                        <Link to={`/user/${username}`} onClick={closeTabs}>\r\n                            <div\r\n                                className=\"bold-weight account-link\">\r\n                                Account\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className=\"right drop-down notifications hide\" ref={notifRef}>\r\n                        <div className=\"subheading-text bold-weight center\">Updates</div>\r\n                    </div>\r\n\r\n                </div>\r\n            </nav>\r\n\r\n            {/* Messages Tab */}\r\n            <Messages\r\n                msgRef={msgRef}\r\n                lastMessages={lastMessages}\r\n                msgInfoRef={msgInfoRef}/>\r\n        </div>\r\n    )\r\n}","import React, {useReducer, useEffect, useState, useRef} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport logo from '../images/logo.svg'\r\nimport * as firebase from 'firebase/app';\r\n\r\nexport default function EditProfile(props){\r\n    let [displayModal, changeModalDisplay] = useState(false);\r\n    let [defaultInputs, changeDefault] = useState();\r\n    let [profile_img, changeProfileImage] = useState();\r\n    let loaderRef = useRef();\r\n    let fileRef = useRef();\r\n    let closeBtnRef = useRef();\r\n\r\n    const initialInputs = {\r\n        firstName: '',\r\n        lastName: '',\r\n        username: '',\r\n        about: '',\r\n        location: '',\r\n        profileImage : '',\r\n    }\r\n\r\n    const reducerFunc = (state, {field, value}) => {\r\n        return {\r\n            ...state,\r\n            [field]: value,\r\n        }\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(reducerFunc, initialInputs);\r\n    let {firstName, lastName, username, about, location, profileImage} = state;\r\n    let isLogged = useSelector(state => state.isLogged);\r\n\r\n    useEffect(() => {\r\n\r\n        let abortController = new AbortController();\r\n\r\n\r\n        // if user is logged in\r\n        if(isLogged){\r\n            // get current user data\r\n            let user = firebase.auth().currentUser;\r\n\r\n            if(!!user){\r\n                // get extra user data saved in firestore\r\n                let dataRef = firebase.firestore().collection('users').doc(user.uid);\r\n\r\n                // save in state\r\n                dataRef.get().then((snapshot) => {\r\n                    resetInput(snapshot.data());\r\n                    changeDefault(snapshot.data())\r\n                })\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            console.log('aborting settings-edit')\r\n            abortController.abort();\r\n        }\r\n    }, [isLogged, ])\r\n\r\n    // controlled inputs handler\r\n    const handleChange = (e) => {\r\n        dispatch({field: e.target.name, value: e.target.value});\r\n    }\r\n\r\n    // send updates to the server\r\n    const saveData = () => {\r\n        if (isLogged){\r\n            // eslint-disable-next-line\r\n            let {firstNameMain, lastNameMain, usernameMain, aboutMain, locationMain} = defaultInputs;\r\n            \r\n            firstNameMain = !!firstNameMain ? firstNameMain : '';\r\n            lastNameMain = !!lastNameMain ? lastNameMain : '';\r\n            usernameMain = !!usernameMain ? usernameMain : '';\r\n            aboutMain = !!aboutMain ? aboutMain : '';\r\n            locationMain = !!locationMain ? locationMain : '';\r\n\r\n            if(username === usernameMain){\r\n                username = '';\r\n            } else {\r\n                username = username.split(' ').join('');\r\n                console.log(username);\r\n            }\r\n\r\n            let user = firebase.auth().currentUser;\r\n            let userReference = firebase.firestore().collection('users').doc(user.uid);\r\n\r\n            firebase.firestore().collectionGroup('users').where('username', '==', username).get().then((snapshots) => {\r\n                if (snapshots.docs.length > 0){\r\n                    alert('username is taken');\r\n                    return;\r\n                } else {\r\n                    // update states\r\n                    userReference.update({\r\n                        firstName: (firstName !== '') ? firstName : firstNameMain,             \r\n                        lastName: (lastName !== '') ? lastName : lastNameMain,           \r\n                        username: (username !== '') ? username : usernameMain,            \r\n                        about: (about !== '') ? about : aboutMain,               \r\n                        location: (location !== '') ? location : locationMain,               \r\n                    }).then(() => {\r\n\r\n                        alert(\"success\");\r\n\r\n                        // change default inputs\r\n                        userReference.get().then(snapshot => {\r\n                            let data = snapshot.data();\r\n                            changeDefault(data);\r\n                        })\r\n                    })\r\n                }\r\n            })            \r\n        }\r\n    }\r\n\r\n    // change input data with the original data provided from server\r\n    const resetInput = (data) => {\r\n        let {firstName, lastName, username, about, location, profileImage} = data;\r\n\r\n        // replacing with placeholder values when no data found\r\n        firstName = !!firstName ? firstName : '';\r\n        lastName = !!lastName ? lastName : '';\r\n        username = !!username ? username : '';\r\n        about = !!about ? about : '';\r\n        location = !!location ? location : '';\r\n        profileImage = !!profileImage ? profileImage : '';\r\n\r\n        // changing states\r\n        dispatch({field: 'firstName', value: firstName});\r\n        dispatch({field: 'lastName', value: lastName});\r\n        dispatch({field: 'username', value: username});\r\n        dispatch({field: 'about', value: about});\r\n        dispatch({field: 'location', value: location});\r\n        dispatch({field: 'profileImage', value: profileImage});\r\n    }\r\n\r\n    const cancelSave = () => {\r\n        resetInput(defaultInputs)\r\n    }\r\n    const saveProfileImage = (e) => {\r\n        console.log(profile_img);\r\n        loaderRef.current.classList.remove('hide');\r\n        let user = firebase.auth().currentUser;\r\n        let storageRef = firebase.storage().ref();\r\n        const file = fileRef.current.files[0];\r\n        let filename = file.name;\r\n        \r\n        const metadeta = {\r\n            contentType: file.type\r\n        }\r\n\r\n        // disable buttons\r\n        let target = e.target\r\n        target.disabled = true;\r\n        closeBtnRef.current.disabled = true;\r\n\r\n        const task = storageRef.child(`profilePictures/${user.uid}/${filename}`).put(file, metadeta)\r\n        task\r\n        .then(snapshot => snapshot.ref.getDownloadURL())\r\n        .then(url => {\r\n            console.log(url)\r\n\r\n            let dbRef = firebase.firestore().collection('users').doc(user.uid)\r\n            dbRef.update({\r\n                profileImage: url,\r\n            }).then(() => {\r\n                // enable buttons\r\n                target.disabled = false;\r\n                closeBtnRef.current.disabled = false;\r\n\r\n                alert(\"Image Upload Successful\")\r\n                loaderRef.current.classList.add('hide');\r\n\r\n                // close Modal\r\n                changeModalDisplay(false);\r\n\r\n                // save image state\r\n                dispatch({field: \"profileImage\", value: url});\r\n            })\r\n        }).catch((err) => {\r\n            alert(err.message);\r\n        })\r\n\r\n    }\r\n\r\n    return(\r\n        <div className={`${props.mainClass}`}>\r\n            <div className=\"col l6 offset-l1\">\r\n                <div className=\"left main-info\">\r\n                    <h4 className=\"bold-weight heading-text\">Edit Profile</h4>\r\n                    <p\r\n                        className=\"subheading-text\">\r\n                        People on Pinterest will get to know you with the info below\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"right s-buttons\">\r\n                    <button\r\n                        className=\"s-button vertical-align bold-weight\"\r\n                        onClick={cancelSave}>\r\n                        Cancel\r\n                    </button>\r\n                    <button \r\n                        className=\"s-button vertical-align redbg-color bold-weight\"\r\n                        onClick={saveData}>\r\n                        Done\r\n                    </button>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <hr />\r\n\r\n                <div className=\"left\">\r\n                    <div className=\"subheading-text\">Photo</div>\r\n                    <div className=\"user-image right\">\r\n                        {profileImage === '' \r\n                            ? <i className=\"material-icons account-icon\">account_circle</i>\r\n                            : <img src={profileImage} className=\"account-image\" alt=\"profile_icon\"/>}\r\n                        <button\r\n                            className=\"s-button image-btn\"\r\n                            onClick={() => {changeModalDisplay(true)}}>\r\n                            Change\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <br />\r\n\r\n                <div className=\"account-name\">\r\n                    <div className=\"left input-field\">\r\n                        <div className=\"subheading-text\">First Name</div>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            onChange={handleChange}\r\n                            value={firstName}\r\n                            placeholder=\"John\"\r\n                            className=\"s-input\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"right input-field\">\r\n                        <div className=\"subheading-text left\">Last Name</div>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            onChange={handleChange}\r\n                            value={lastName}\r\n                            placeholder=\"Appleseed\"\r\n                            className=\"s-input left\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <div className=\"account-username\">\r\n                    <div className=\"subheading-text\">Username</div>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        onChange={handleChange}\r\n                        value={username}\r\n                        placeholder=\" johnappleseed\"\r\n                        className=\"s-input s-username\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"account-about\">\r\n                    <div className=\"subheading-text\">About your profile</div>\r\n                    <textarea\r\n                        className=\"s-textarea\"\r\n                        name=\"about\"\r\n                        onChange={handleChange}\r\n                        value={about}\r\n                        placeholder=\"Write a little bit about yourself here!\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"account-location\">\r\n                    <div className=\"subheading-text\">Location</div>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"location\"\r\n                        onChange={handleChange}\r\n                        value={location}\r\n                        className=\"s-input s-location\"\r\n                        placeholder=\"Ex. San Francisco\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {displayModal ? <div className={`overlay s-overlay`}></div> : ''}\r\n            {displayModal ? <div className=\"s-modal img-modal\">\r\n                <h4 className=\"center\">Select an Image</h4>\r\n\r\n                <input\r\n                    onChange={(e) =>  {changeProfileImage(e.target.value)}}\r\n                    ref={fileRef} type=\"file\" />\r\n\r\n                <div className=\"right move-bottom\">\r\n                    <button\r\n                        className=\"s-button\"\r\n                        onClick={() => {changeModalDisplay(false)}}\r\n                        ref={closeBtnRef}>\r\n                        Close\r\n                    </button>\r\n                    <button\r\n                        className=\"s-button redbg-color\" onClick={saveProfileImage}>\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </div> : ''}\r\n\r\n                <img ref={loaderRef} src={logo} alt=\"loading\" className=\"loader hide\" />\r\n        </div>\r\n    )\r\n}","import React, {useState, useReducer, useEffect} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport Select from 'react-select';\r\nimport * as firebase from 'firebase/app';\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default function AccountSettings(props){\r\n    let passRef = React.useRef();\r\n    let oldPassRef = React.useRef();\r\n    let [defaultInputs, changeDefault] = useState();\r\n\r\n    // base state for controlled input components\r\n    const initialInputs = {\r\n        oldPass: '',\r\n        newPass: '',\r\n        newAgain: '',\r\n        email: '',\r\n        gender: '',\r\n        age: '',\r\n    }\r\n\r\n    // state that triggers modal show/hide\r\n    let [showModal, changeShowModal] = useState(false);\r\n    // userID obtained from the main component\r\n    let userId = useSelector(state => state.userID)\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        // get current user info\r\n        let user = firebase.auth().currentUser;\r\n        if(!!user){\r\n            let uid = user.uid;\r\n            db.collection('users').doc(uid).get().then((result) => {\r\n                let userData = result.data();\r\n                let userAge = userData.age;\r\n                let userEmail = !!userData.email ? userData.email : '';\r\n                let userGender = !!userData.gender ? userData.gender : '';\r\n\r\n                dispatch({field: \"email\", value: userEmail});\r\n                dispatch({field: \"age\", value: userAge});\r\n                dispatch({field: \"gender\", value: userGender});\r\n\r\n                changeDefault(result.data());\r\n            })\r\n        }\r\n\r\n        return () => {\r\n            console.log('aborting settings-account')\r\n            abortController.abort();\r\n        }\r\n    }, [userId, ])\r\n\r\n    function reducerFunc(state, {field, value}){\r\n        return {\r\n            ...state,\r\n            [field] : value\r\n        }\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(reducerFunc, initialInputs)\r\n    const {oldPass, newPass, newAgain, email, gender, age} = state;\r\n\r\n    // controlled inputs\r\n    const handleChange = (e) => {\r\n        dispatch({field: e.target.name, value: e.target.value})\r\n    }\r\n    const handleSelect = (option) => {\r\n        dispatch({field: 'gender', value: option.value});\r\n        console.log(option);\r\n    }\r\n    const updataData = () => {\r\n        \r\n        // https://www.w3resource.com/javascript/form/email-validation.php\r\n        let emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n        if (email !== ''){\r\n            if(!emailRegex.test(email)){\r\n                alert(\"Invalid Email Address\");\r\n                return;\r\n            }\r\n        }\r\n        if (Number(age) > 120){\r\n            alert(\"How are you still alive, guest from the internet?\");\r\n            return\r\n        }\r\n\r\n        db.collection('users').doc(userId).update({\r\n            email,\r\n            age,\r\n            gender,\r\n        }).then(() => {alert(\"success\")}).catch((err) => {\r\n            alert(err.message);\r\n        })\r\n\r\n    }\r\n\r\n    // closing the change password Modal\r\n    function closeModals(){\r\n        changeShowModal(false);\r\n\r\n        // reset the values\r\n        dispatch({field: \"oldPass\", value: ''})\r\n        dispatch({field: \"newPass\", value: ''})\r\n        dispatch({field: \"newAgain\", value: ''})\r\n    }\r\n\r\n    // show change password Modal\r\n    const showPasswordModal = () => {\r\n        changeShowModal(true);\r\n    }\r\n\r\n    const resetInput = (data) => {\r\n        let {email, age, gender} = data;\r\n\r\n        // replacing with placeholder values when no data found\r\n        email = !!email ? email : '';\r\n        age = !!age ? age : '';\r\n        gender = !!gender ? gender : '';\r\n\r\n        // changing states\r\n        dispatch({field: 'email', value: email});\r\n        dispatch({field: 'age', value: age});\r\n        dispatch({field: 'gender', value: gender});\r\n    }\r\n\r\n    const cancelSave = () => {\r\n        resetInput(defaultInputs);\r\n    }\r\n\r\n    // options for select(ing) gender.\r\n    const options = [\r\n        { value: 'male', label: 'Male' },\r\n        { value: 'female', label: 'Female' },\r\n        { value: 'non-binary', label: 'Non-Binary' },\r\n    ]\r\n\r\n    const updatePassword = () => {\r\n        let user = firebase.auth().currentUser;\r\n\r\n        if (newPass !== newAgain){\r\n            passRef.current.textContent = \"Password don't match\";\r\n            return;\r\n        }\r\n\r\n        let credential = firebase.auth.EmailAuthProvider.credential(\r\n            firebase.auth().currentUser.email,\r\n            oldPass,\r\n        );\r\n\r\n        user.reauthenticateWithCredential(credential).then(function() {\r\n            // User re-authenticated.\r\n            console.log(\"success\")\r\n\r\n            user.updatePassword(newPass).then(() => {\r\n                passRef.current.textContent = \"\";\r\n                oldPassRef.current.textContent = \"\";\r\n                alert('success');\r\n                closeModals();\r\n                \r\n            }).catch((err) => {\r\n                alert(err.message);\r\n            })\r\n\r\n        }).catch(function(error) {\r\n            oldPassRef.current.textContent = \"Invalid Password\";\r\n        });\r\n\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className={`${props.mainClass}`}>\r\n            <div className=\"col l6 offset-l1\">\r\n\r\n                <div className=\"left main-info\">\r\n                    <h4 className=\"bold-weight heading-text\">Account Settings</h4>\r\n                    <p\r\n                        className=\"subheading-text\">\r\n                        Set your login preferences, help us personalize your experience and make \r\n                        big account changes here.\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"right s-buttons\">\r\n                    <button\r\n                        className=\"s-button vertical-align bold-weight\"\r\n                        onClick={cancelSave}\r\n                        disabled={userId === '' ? true : false}>\r\n                        Cancel\r\n                    </button>\r\n                    <button \r\n                        className=\"s-button vertical-align redbg-color bold-weight\"\r\n                        disabled={userId === '' ? true : false}\r\n                        onClick={updataData}>\r\n                        Done\r\n                    </button>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <hr />\r\n\r\n                <div className=\"left\">\r\n                    <div className=\"s-heading-text bold-weight not-opaque\">Basic Information</div>\r\n                    <div className=\"user-email right\">\r\n                        <div className=\"s-subheading-text\">Email Address</div>\r\n\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                onChange={handleChange}\r\n                                value={email}\r\n                                placeholder=\"JohnAppleseed@gmail.com\"\r\n                                className=\"s-input\"\r\n                            />\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n\r\n                <div className=\"left user-age\">\r\n                    <div className=\"s-subheading-text\">Age</div>\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"18\"\r\n                        value={Number(age)}\r\n                        name=\"age\"\r\n                        onChange={handleChange}\r\n                        className=\"s-input s-age\"\r\n                    />\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <br />\r\n\r\n                <div className=\"left\">\r\n                    <button\r\n                        className=\"s-button change-passbtn bold-weight\"\r\n                        onClick={showPasswordModal}>\r\n                        Change Your Password\r\n                    </button>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n\r\n                <div className=\"left user-gender col l6\">\r\n                    <div className=\"s-subheading-text\">Gender</div>\r\n                    <Select\r\n                        options={options}\r\n                        value={options.filter((option) => option.value === gender)}\r\n                        onChange={handleSelect}/>\r\n                </div>\r\n\r\n                <br />\r\n                <br />\r\n                <br />\r\n\r\n                {showModal === true? <div className={`overlay s-overlay`}></div> : ''}\r\n                {showModal === true ? <div className=\"s-modal\">\r\n                    <div className=\"center bold-weight\">Change Your Password</div>\r\n                    <br />\r\n                    <div className=\"col l6 old-pass\">\r\n                        <div className=\"left col l3 s-subheading-text pass-header bold-weight\">\r\n                            Old Password\r\n                        </div>\r\n                        <div className=\"right col l3 s-old-pass\">\r\n                            <input\r\n                                name=\"oldPass\"\r\n                                value={oldPass}\r\n                                className=\"s-input\"\r\n                                onChange={handleChange} \r\n                                type=\"password\" />\r\n                            <div ref={oldPassRef} className=\"err\"></div>\r\n                        </div>\r\n\r\n                        <br />\r\n                        <br />\r\n                        <div className=\"left col l6 h-row\">\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n\r\n                    <div className=\"col l6 new-pass\">\r\n                        <div className=\"left col l3 s-subheading-text pass-header bold-weight\">\r\n                            New Password\r\n                        </div>\r\n                        <div className=\"right col l3 s-new-pass\">\r\n                            <input\r\n                                name=\"newPass\"\r\n                                value={newPass}\r\n                                onChange={handleChange}\r\n                                className=\"s-input\"\r\n                                type=\"password\" \r\n                            />\r\n                            <div className=\"err\"></div>\r\n                        </div>\r\n                        <div className=\"left col l6 h-row\">\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n\r\n                    <div className=\"col l6 new-pass\">\r\n                        <div className=\"left col l3 s-subheading-text pass-header bold-weight\">\r\n                            Type it Again\r\n                        </div>\r\n                        <div className=\"right col l3 s-new-pass\">\r\n                            <input\r\n                                className=\"s-input\"\r\n                                value={newAgain}\r\n                                onChange={handleChange}\r\n                                type=\"password\"\r\n                                name=\"newAgain\"\r\n                            />\r\n                            <div ref={passRef} className=\"err\"></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n\r\n                    <div className=\"col l6 button-container\">\r\n                        <div className=\"move-right\">\r\n                            <button\r\n                                className=\"s-button bold-weight bigger\"\r\n                                onClick={closeModals}>\r\n                                Cancel\r\n                            </button>\r\n                            <button\r\n                                className=\"s-button bold-weight redbg-color bigger\"\r\n                                onClick={updatePassword}>\r\n                                Save\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </div> : ''}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Select from 'react-select';\r\nimport * as firebase from 'firebase/app';\r\n\r\nexport default function Preferences(props){\r\n    let [multiValue, changeValue] = useState([]);\r\n\r\n    const [prefOptions, changeOptions] = useState();\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        // array to save all the tags in\r\n        let arr = [];\r\n\r\n        // get the tags from the server\r\n        firebase.firestore().collection('tags').get().then(snapshot => {\r\n            snapshot.docs.map(doc => {\r\n                let value = doc.data().name;\r\n                let obj = {\r\n                    value,\r\n                    label: value\r\n                }\r\n\r\n                // push the main value to the array\r\n                arr.push(obj);\r\n                return doc.data();\r\n            })\r\n        }).then(() => {\r\n            changeOptions(arr)\r\n        })\r\n\r\n        return () => {\r\n            abortController.abort();\r\n        }\r\n    }, [])\r\n\r\n    const handleMultiChange = (option) => {\r\n        changeValue(option);\r\n    }\r\n\r\n    const updatePreferences = () => {\r\n        if (multiValue.length < 1){\r\n            console.log(\"no change\")\r\n            return\r\n        }\r\n        let user = firebase.auth().currentUser;\r\n        let preferencesRef = firebase.firestore().collection(\"users\").doc(user.uid);\r\n        let allTags = [];\r\n\r\n        for(let i = 0; i < multiValue.length; i++){\r\n            allTags.push(multiValue[i].value);\r\n        }\r\n\r\n        console.log(allTags);\r\n\r\n        preferencesRef.update({\r\n            preferences : firebase.firestore.FieldValue.delete(),\r\n        }).then(() => {\r\n            preferencesRef.update({\r\n                preferences: allTags,\r\n            })\r\n            alert('success')\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className={`${props.mainClass}`}>\r\n            <div className=\"col l6 offset-l1\">\r\n                <div className=\"left main-info\">\r\n                    <h4 className=\"bold-weight heading-text\">User Preferences</h4>\r\n                    <p\r\n                        className=\"subheading-text\">\r\n                        Set your preferences, help us personalize your experience.\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"right s-buttons btn-con-t\">\r\n                    <button\r\n                        className=\"s-button vertical-align bold-weight\">\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        className=\"s-button vertical-align redbg-color bold-weight\"\r\n                        onClick={updatePreferences}>\r\n                        Done\r\n                    </button>\r\n                </div>\r\n\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <hr />\r\n                <br/>\r\n                <br/>\r\n\r\n                <div className=\"left user-preferences col l6\">\r\n\r\n                    <Select\r\n                        name=\"preferences\"\r\n                        placeholder=\"Preferences\"\r\n                        options={prefOptions}\r\n                        onChange={handleMultiChange}\r\n                        isMulti\r\n                    />\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useRef } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport EditProfile from './Settings-Edit';\r\nimport AccountSettings from './Settings-Account';\r\nimport Preferences from './Preferences';\r\n\r\nexport default function Settings(){\r\n    let [currentTab, changeCurrent] = useState('preferences');\r\n    let [redirect, changeRedirect] = useState(false);\r\n    let selectedRef = useRef('');\r\n\r\n    const changeTab = (e) => {\r\n        let eTarget = e.target;\r\n\r\n            // change tab\r\n            selectedRef.current.classList.remove('s-selected');\r\n            selectedRef.current = e.target;\r\n\r\n            eTarget.classList.add('s-selected');\r\n            let tabName = eTarget.id;\r\n\r\n            changeCurrent(tabName);\r\n    }\r\n\r\n    const sendBack = () => {\r\n        changeRedirect(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            {redirect ? <Redirect to=\"/main\" /> : ''}\r\n            <div className=\"col l3\">\r\n                <div className=\"left\">\r\n                    <i className=\"material-icons backward-btn\" onClick={sendBack}>keyboard_backspace</i>\r\n                </div>\r\n                <br />\r\n                <div className=\"right\">\r\n                    <div>\r\n                        <i className=\"material-icons s-icon\">edit</i>\r\n                        <span\r\n                            className=\"s-heading-text bold-weight\"\r\n                            id=\"profile\"\r\n                            onClick={changeTab}>\r\n                            Edit Profile\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <i className=\"material-icons s-icon\">account_circle</i>\r\n                        <span\r\n                            className=\"s-heading-text bold-weight\"\r\n                            id=\"account\"\r\n                            onClick={changeTab}>\r\n                            Account Settings\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <i className=\"material-icons s-icon\">favorite</i>\r\n                        <span\r\n                            className=\"s-heading-text bold-weight\"\r\n                            id=\"preferences\"\r\n                            ref={selectedRef}\r\n                            onClick={changeTab}>\r\n                            User Preferences\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Edit profile tab */}\r\n            {currentTab === \"profile\" ? <EditProfile mainClass=\"\" /> : '' }\r\n            \r\n            {/* Account Settings tab */}\r\n            {currentTab === \"account\" ? <AccountSettings mainClass=\"\" /> : ''}\r\n\r\n            {/* Account Preferences tab */}\r\n            {currentTab === \"preferences\" ? <Preferences mainClass=\"\" /> : ''}\r\n            \r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport * as firebase from 'firebase/app';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Photo(props){\r\n    let [hidden, setHidden] = useState(false);\r\n\r\n    // for deleting saved pins;\r\n    const deletePin = () => {\r\n        let docId = props.imageData[3];\r\n        const user = firebase.auth().currentUser;\r\n        const ref = firebase.firestore().collection('savedPins').doc(user.uid).collection('userSaved');\r\n        ref.where('postId', '==', docId)\r\n            .get()\r\n            .then(snapshot => {snapshot.docs[0].ref.delete()})\r\n            .then(() => {\r\n                setHidden(true);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={`fixed-width ${hidden ? 'hide' : ''}`}>\r\n            <div className={`photogrid-photo`}>\r\n                {!!props.deletable && props.deletable === true\r\n                    ? <i className=\"material-icons delete-saved-pin\" onClick={deletePin}>delete</i>\r\n                    : ''}\r\n                <Link to={`/pin/${props.imageData[3]}`}>\r\n                    <img\r\n                        className={`auto-fit1`}\r\n                        src={props.imageData[2]}\r\n                        load=\"lazy\"\r\n                        alt={'userpost'}\r\n                        data-title={props.imageData[1]}\r\n                        data-postid={props.imageData[3]}\r\n                        data-by={props.imageData[4]}\r\n                        data-tag={props.imageData[5]}\r\n                    />\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState, useRef} from 'react';\r\nimport Photo from './PhotoGrid-Photo';\r\nimport * as firebase from 'firebase/app';\r\nimport logo from '../images/logo.svg';\r\n\r\nexport default function PhotoGrid(props){\r\n    let [displayedImages, setDisplayedImages] = useState([]);\r\n    let [totalImages, setTotalImages] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    let containerRef = useRef();\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n        //let user = firebase.auth().currentUser;\r\n        let preferences = props.pref;\r\n\r\n        let ref;\r\n        if (!!props.following){\r\n            ref = firebase.firestore().collectionGroup('userPosts').where('by','in', props.following).orderBy('created', 'desc');\r\n        }\r\n        else if(!!props.saved){\r\n            ref = firebase.firestore().collectionGroup('userPosts').where('docId','in', props.saved).orderBy('created', 'desc');\r\n        }\r\n        else {\r\n            ref = firebase.firestore().collectionGroup('userPosts').where('tag','in', preferences).orderBy('created', 'desc');\r\n        }\r\n        // .where('by', '!==', user.uid)\r\n\r\n        let totalArr = [];\r\n        let displayArr = [];\r\n\r\n        ref.get().then(result => {\r\n            result.docs.forEach(doc => {\r\n                let {title, about, url, docId, by, tag} = doc.data();\r\n                \r\n                let imageInfo = [title, about, url, docId, by, tag];\r\n                totalArr.push(imageInfo);\r\n            })\r\n        }).then(() => {\r\n\r\n            // take a maximum of 20 images out of all the images obtained \r\n            for (let i = 0; i < 20; i++){\r\n\r\n                if(totalArr[0]){\r\n                    displayArr.push(totalArr.shift())\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n            setTotalImages(totalArr)\r\n            setDisplayedImages(displayArr);\r\n            setLoading(false);\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            setLoading(false);\r\n        })\r\n\r\n        return () => {\r\n            console.log('aborting photo grids');\r\n            abortController.abort();\r\n        }\r\n    }, [props.pref, props.following, props.saved])\r\n\r\n    useEffect(() => {\r\n        const trackScrolling = () => {\r\n            const wrappedElement = document.getElementById('top-el');\r\n            if (isBottom(wrappedElement)) {\r\n                let arr = [];\r\n                let totalArr = totalImages;\r\n                console.log('element bottom reached');\r\n                    // take a maximum of 20 images out of all the images obtained \r\n                for (let i = 0; i < 20; i++){\r\n\r\n                    if(totalArr[0]){\r\n                        arr.push(totalArr.shift())\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n                \r\n                setTotalImages(totalArr);\r\n                if (arr.length > 0){\r\n                    setDisplayedImages(prevstate => [...prevstate, ...arr])\r\n                } else {\r\n                 window.removeEventListener('scroll', trackScrolling)  \r\n                }\r\n            }\r\n        };\r\n        \r\n        window.addEventListener('scroll', trackScrolling)\r\n\r\n        return () => {window.removeEventListener('scroll', trackScrolling);}\r\n    }, [totalImages, ])\r\n\r\n    const isBottom = (el) => {\r\n        return el.getBoundingClientRect().bottom <= window.innerHeight;\r\n    }\r\n\r\n    return(\r\n        <div id=\"top-el\">\r\n            {displayedImages.length !== 0 ? <div className=\"photogrid-container\" ref={containerRef}>\r\n                {displayedImages.map((image, index) => {\r\n                    return (\r\n                        <Photo imageData={image} key={index} deletable={!!props.saved ? true : false}/>\r\n                    )\r\n                })}\r\n            </div> : <div className=\"center\">No pins found</div>}\r\n            <div className=\"center\">\r\n                <img className={`${!loading ? 'hide' : ''} loaderv2`} alt=\"loading\" src={logo} />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useRef, useState, useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PhotoGrid from './PhotoGrid';\r\nimport * as firebase from 'firebase/app';\r\n\r\nexport default function UserProfileTabs(props){\r\n    const personalRef = useRef();\r\n    const savedRef = useRef();\r\n    const [showPersonal, setShowPersonal] = useState(true);\r\n    const isLogged = useSelector(state => state.isLogged);\r\n    const [savedPinData, setSavedPinData] = useState([]);\r\n\r\n    // eslint-disable-next-line\r\n    const [showSaved, setShowSaved] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        let arr = [];\r\n        let ref = firebase.firestore().collection('savedPins').doc(props.mainId).collection('userSaved');\r\n        ref.orderBy('savedOn').get()\r\n            .then(snapshots => snapshots.docs)\r\n            .then(docs => {\r\n                docs.forEach(doc => {\r\n                    arr.push(doc.data().postId)\r\n                })\r\n            })\r\n            .then(() => {\r\n                setSavedPinData(arr);\r\n                console.log(arr);\r\n            })\r\n        return () => {\r\n            console.log('aborting profile tabs');\r\n            abortController.abort();\r\n        }\r\n    }, [isLogged, props.mainId])\r\n\r\n    const showPersonalClick = () => {\r\n        personalRef.current.classList.add('selected');\r\n        savedRef.current.classList.remove('selected');\r\n\r\n        setShowPersonal(true);\r\n        setShowSaved(false);\r\n    }\r\n\r\n    const showSavedClick = () => {\r\n        personalRef.current.classList.remove('selected');\r\n        savedRef.current.classList.add('selected');\r\n\r\n        setShowPersonal(false);\r\n        setShowSaved(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"pins center\">\r\n                <span className=\"tab selected\" ref={personalRef} onClick={showPersonalClick}>Personal</span>\r\n                <span className=\"tab\" ref={savedRef} onClick={showSavedClick}>Saved</span>\r\n            </div>\r\n            <br />\r\n            <div className={`${showPersonal ? '' : 'hide'}`}>\r\n                {props.mainId ? <PhotoGrid following={[props.mainId]}/> : ''}\r\n            </div>\r\n            <div className={showSaved ? '' : 'hide'}>\r\n                {savedPinData.length > 0 ? <PhotoGrid saved={savedPinData}/>\r\n                : <div className=\"center not-found\">No Saved Pins</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useEffect, useState } from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport * as firebase from 'firebase/app';\r\nimport logo from '../images/logo.svg';\r\nimport UserProfileTabs from './UserProfile-Tabs';\r\n//import {v4 as uuidv4} from 'uuid';\r\n\r\nexport default function Profile(props){\r\n    let params = useParams();\r\n    let [userData, changeUserData] = useState([]);\r\n    let [found, changeFound] = useState(false);\r\n    let [isCurrent, changeIsCurrent] = useState(false);\r\n    let [loading, changeLoading] = useState(true);\r\n    let [isFollowed, changeIsFollowed] = useState(false);\r\n    let [following, changeFollowing] = useState(0);\r\n    let [followers, changeFollowers] = useState(0);\r\n    let [mainId, changeMainId] = useState('');\r\n    let isLogged = useSelector(state => state.isLogged)\r\n    let userId = params.userid;\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        let ref = firebase.firestore().collection('users').where('username', '==', userId);\r\n        let ID = '';\r\n        ref.get().then(snapshot => {\r\n        \r\n            console.log(snapshot.docs[0])\r\n            let userinfo = snapshot.docs[0];\r\n            if(!!userinfo){\r\n\r\n                // data\r\n                ID = userinfo.id;\r\n                changeMainId(ID);\r\n\r\n                let mainData = userinfo.data();\r\n                let {profileImage, firstName, lastName, about} = mainData;\r\n                let fullName = `${firstName ? firstName : ''} ${lastName ? lastName : ''}`;\r\n                about = about ? about : '';\r\n                profileImage = profileImage ? profileImage : '';\r\n\r\n                let ref = firebase.firestore().collection('following');\r\n\r\n                ref.doc(ID).collection('userFollowing').get().then(snapshot => {\r\n                    changeFollowing(snapshot.docs.length);\r\n                })\r\n\r\n                // totalfollowers\r\n                let totalFollowers = 0;\r\n\r\n                // getting the total followers\r\n                firebase.firestore().collectionGroup('userFollowing')\r\n                .where('following', '==', ID).get()\r\n                .then(snapshot => {\r\n                    let followingAmount = snapshot.docs.length;\r\n                    totalFollowers = followingAmount; \r\n                    return totalFollowers;\r\n                }).then((result) => {\r\n                    changeFollowers(result);\r\n                    changeLoading(false)\r\n                })\r\n\r\n                changeUserData([fullName, about, profileImage]);\r\n                changeFound(true);\r\n                \r\n            } else {\r\n                console.log(\"not found\")\r\n                changeLoading(false)\r\n                changeFound(false);\r\n            }\r\n\r\n            if(isLogged){\r\n                let loggedInUserId = firebase.auth().currentUser.uid;\r\n                if(!!loggedInUserId){\r\n                    let isUser = loggedInUserId ===  ID ? true : false;\r\n                    console.log(isUser);\r\n                    \r\n                    let ref = firebase.firestore().collection('following').doc(loggedInUserId);\r\n                    ref\r\n                        .collection('userFollowing')\r\n                        .where(\"following\", '==', ID)\r\n                        .get().then(snapshot => {\r\n                            if (snapshot.docs.length === 1){\r\n                                changeIsFollowed(true);\r\n                            }\r\n                        })\r\n\r\n                    changeIsCurrent(isUser);\r\n                }\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            console.log('aborting user profile');\r\n            abortController.abort();\r\n        }\r\n    },[userId, isLogged, ])\r\n\r\n    const saveFollow = () => {\r\n        if(!isLogged || isCurrent || isFollowed || mainId === ''){\r\n            return \"Cant Follow\"\r\n        }\r\n        let loggedInUserId = firebase.auth().currentUser.uid;\r\n        let ref = firebase.firestore().collection('following').doc(loggedInUserId);\r\n        ref\r\n            .collection('userFollowing')\r\n            .doc(mainId).set({\r\n                following : mainId,\r\n                by: loggedInUserId,\r\n            }, {merge: true}).then(() => {\r\n                changeFollowers(followers + 1);\r\n                changeIsFollowed(true);\r\n            });\r\n    }\r\n\r\n    const saveUnfollow = () => {\r\n        if(!isLogged || isCurrent || !isFollowed || mainId === ''){\r\n            return \"Cant Follow\"\r\n        }\r\n        let loggedInUserId = firebase.auth().currentUser.uid;\r\n        let ref = firebase.firestore().collection('following').doc(loggedInUserId);\r\n        ref.collection('userFollowing').doc(mainId).delete().then(() => {\r\n            changeFollowers(followers - 1);\r\n            changeIsFollowed(false);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className={`${!loading && !found ? '' : 'hide'} center not-found`}>Not Found</div>\r\n            <div className={`${found ? 'bold-weight' : 'hide'}`}>\r\n                <div className='center'>\r\n                    { (userData[2] === '') ? <i className={\"material-icons huge\"}>account_circle</i>\r\n                    : <img className=\"profile-picture center\" alt=\"profileimage\" src={userData[2]}/>}\r\n                </div>\r\n                <div className=\"name-container\">\r\n                    <div className=\"center name\">{userData[0]}</div>\r\n                </div>\r\n\r\n                <div className=\"about-info-container\">\r\n                    <div className=\"center about-info\">{userData[1]}</div>\r\n                </div>\r\n                <div className=\"follow-info center\">\r\n                    <Link to={`/user/${userId}/followers`}>\r\n                        <span className=\"followers\">{followers} followers</span>\r\n                    </Link>\r\n                    <Link to={`/user/${userId}/following`}>\r\n                    <span className=\"following\">{following} following</span>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"follow-container center\">\r\n                    <button\r\n                        className={`s-button follow-btn redbg-color\r\n                            ${isLogged && !isCurrent && !isFollowed ? '' : 'hide'}`}\r\n                        onClick={saveFollow}>\r\n                        Follow\r\n                    </button>\r\n                    <button\r\n                        className={`  ${isFollowed && !isCurrent? '' : 'hide'} \r\n                            s-button follow-btn redbg-color`}\r\n                        onClick={saveUnfollow}>\r\n                        Unfollow\r\n                    </button>\r\n                </div>\r\n                <div className={`${isLogged && isCurrent ? '' : 'hide'} add-pins`}>\r\n                    <div className=\"add-container tooltip\">\r\n                        <Link to=\"/create-a-pin\"><i className=\"material-icons add-icon\">add</i></Link>\r\n                        <Link className=\"tooltiptext\" to=\"/create-a-pin\">Add New Pin</Link>\r\n                    </div>\r\n                </div>\r\n                {mainId ? <UserProfileTabs mainId={mainId}/> : ''}\r\n            </div>\r\n\r\n            <div className=\"center\">\r\n                <img className={`${!loading ? 'hide' : ''} profile-loader`} alt=\"loading\" src={logo}></img>\r\n            </div>\r\n        </div>\r\n    )\r\n}","// THANKS TO Uzochukwu Eddie Odozi FOR THIS TUTORIAL! \r\n// https://blog.logrocket.com/create-a-drag-and-drop-component-with-react-dropzone/\r\n\r\n\r\n\r\nimport React, {useState, useRef} from 'react';\r\nimport './dropzone.css';\r\n\r\nconst DropZone = (props) => {\r\n\r\n    let [selectedFile, setSelectedFile] = useState('');\r\n    let [errorMessage, setErrorMessage] = useState('');\r\n    const fileInputRef = useRef();\r\n    const modalRef = useRef();\r\n    const modalImageRef = useRef();\r\n\r\n    const dragOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragEnter = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const dragLeave = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const fileDrop = (e) => {\r\n        e.preventDefault();\r\n\r\n        const files = e.dataTransfer.files;\r\n\r\n        if (files.length){\r\n            handleFiles(files[files.length - 1]);\r\n        }\r\n    }\r\n\r\n    const handleFiles = (file) => {\r\n\r\n        if (validateFile(file)){\r\n            console.log('valid file');\r\n        } else {\r\n            file['invalid'] = true;\r\n            // set error message\r\n            setErrorMessage('File type not permitted');\r\n            console.log('invalid');\r\n        }\r\n\r\n        setSelectedFile(file);\r\n        props.handleImageChange(file);\r\n    }\r\n\r\n    const validateFile = (file) => {\r\n        const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/x-icon'];\r\n        if (validTypes.indexOf(file.type) === -1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const fileSize = (size) => {\r\n        if (size === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(size) / Math.log(k));\r\n        return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    }\r\n\r\n    const fileType = (fileName) => {\r\n        if (fileName){\r\n            return fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length) || fileName;\r\n        }\r\n    }\r\n\r\n    const openImageModal = (file) => {\r\n        const reader = new FileReader();\r\n        modalRef.current.style.display = 'block';\r\n        reader.readAsDataURL(file);\r\n        reader.onload = (e) => {\r\n            modalImageRef.current.style.backgroundImage = `url(${e.target.result})`\r\n        }\r\n    }\r\n\r\n    const closeModal = () => {\r\n        modalRef.current.style.display = \"none\";\r\n        modalImageRef.current.style.backgroundImage = 'none';\r\n    }\r\n\r\n    const fileInputClicked = () => {\r\n        fileInputRef.current.click();\r\n    }\r\n\r\n    const fileSelected = () => {\r\n        if (fileInputRef.current.files.length) {\r\n            handleFiles(fileInputRef.current.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"center cont\">\r\n            <div\r\n                className=\"drop-container\"\r\n                onDragOver={dragOver}\r\n                onDragEnter={dragEnter}\r\n                onDragLeave={dragLeave}\r\n                onDrop={fileDrop}\r\n                onClick={fileInputClicked}>\r\n                <div className=\"drop-message\">\r\n                <input\r\n                    ref={fileInputRef}\r\n                    className=\"file-input\"\r\n                    type=\"file\"\r\n                    onChange={fileSelected}\r\n                />\r\n                    <div className=\"upload-icon\"></div>\r\n                    Drag & Drop your image Here.\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"d-modal\" ref={modalRef}>\r\n                <div className=\"d-overlay\"></div>\r\n                <div className=\"close\" onClick={closeModal}>X</div>\r\n                <div className=\"modal-image\" ref={modalImageRef}></div>\r\n            </div>\r\n\r\n            <div className={`file-display-container ${selectedFile === '' ? 'hide' : ''}`}>\r\n                <div className=\"file-status-bar\" onClick={() => {openImageModal(selectedFile)}}>\r\n                    <div>\r\n                        <div className=\"file-type-logo\"></div>\r\n                        <div className=\"file-type\">{fileType(selectedFile.name)}</div>\r\n                        <span className=\"file-name\">{selectedFile.name}</span>\r\n                        <span className=\"file-size\">({fileSize(selectedFile.size)})</span> {selectedFile.invalid && <span className='file-error-message'>({errorMessage})</span>}\r\n                    </div>\r\n                    <div className=\"file-remove\" onClick={() => {setSelectedFile('')}}>X</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DropZone;","import React, {useRef, useEffect, useState, useReducer} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {Redirect } from 'react-router-dom';\r\nimport * as firebase from 'firebase/app';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport './styles/CreatePin.css';\r\nimport DropZone from './dropzone/DropZone';\r\nimport Select from 'react-select';\r\nimport logo from '../images/logo.svg';\r\n\r\nexport default function CreatePin(){\r\n    const titleErrorRef = useRef();\r\n    const tagErrorRef = useRef();\r\n    const aboutErrorRef = useRef();\r\n    const mobileRef = useRef();\r\n    const pcRef = useRef();\r\n    const containerRef = useRef();\r\n\r\n    const [tagOptions, changeOptions] = useState();\r\n    const [loading, setLoading]  = useState(false);\r\n    const [redirect, setRedirect] = useState(false);\r\n    let [user, setUser] = useState([]);\r\n\r\n    const isLogged = useSelector(state => state.isLogged);\r\n\r\n    function reducer(state, {field, value}){\r\n        return {\r\n            ...state,\r\n            [field] : value,\r\n        }\r\n    }\r\n\r\n    const initialState = {\r\n        title: '',\r\n        about: '',\r\n        tag: '',\r\n        image: '',\r\n        createdTag: '',\r\n    }\r\n\r\n    let [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    let {title, about, tag, image, createdTag} = state;\r\n\r\n    useEffect(() => {\r\n\r\n        let abortController = new AbortController();\r\n        \r\n        if(isLogged){\r\n            let userInfo = firebase.auth().currentUser;\r\n                if(!!userInfo){\r\n                firebase.firestore().collection('users').doc(userInfo.uid).get().then(snapshot => {\r\n                    let {firstName, lastName, profileImage} = snapshot.data();\r\n                    let fullName = `${!!firstName ? firstName : ''} ${!!lastName ? lastName : ''}`;\r\n                    profileImage = !!profileImage ? profileImage : '';\r\n                    setUser([fullName, profileImage]);\r\n                })\r\n            }\r\n        }\r\n\r\n        // array to save all the tags in\r\n        let arr = [];\r\n\r\n        // get the tags from the server\r\n        firebase.firestore().collection('tags').get().then(snapshot => {\r\n            snapshot.docs.map(doc => {\r\n                let value = doc.data().name;\r\n                let obj = {\r\n                    value,\r\n                    label: value\r\n                }\r\n\r\n                // push the main value to the array\r\n                arr.push(obj);\r\n                return doc.data();\r\n            })\r\n        }).then(() => {changeOptions(arr) })\r\n\r\n        return () => {\r\n            console.log('aborting pin creation');\r\n            abortController.abort();\r\n        }\r\n    }, [isLogged, ])\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        const resize = () => {\r\n            if(window.innerWidth < 650){\r\n                mobileRef.current.classList.remove('hide');\r\n                pcRef.current.classList.add('hide');\r\n                containerRef.current.style.width = '500px'\r\n                containerRef.current.style.height = '1100px'\r\n            } else {\r\n                mobileRef.current.classList.add('hide');\r\n                pcRef.current.classList.remove('hide');\r\n                containerRef.current.style.width = '900px'\r\n                containerRef.current.style.height = '750px'\r\n            }\r\n        }\r\n        resize();\r\n\r\n        window.addEventListener('resize', resize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', resize);\r\n            abortController.abort();\r\n        }\r\n    }, [])\r\n\r\n    const handleChange = (e) => {\r\n        let field = e.target.name;\r\n        let value = e.target.value;\r\n        dispatch({field : field , value : value})\r\n    }\r\n\r\n    const handleImageChange = (image) => {\r\n        dispatch({field: 'image', value : image})\r\n    }\r\n\r\n    const handleTagChange = (option) => {\r\n        dispatch({field: \"tag\", value: option});\r\n    }\r\n    const resetValues = () => {\r\n        dispatch({field: \"tag\", value: \"\"});\r\n        dispatch({field: \"createdTag\", value: \"\"});\r\n        dispatch({field: \"title\", value: \"\"});\r\n        dispatch({field: \"about\", value: \"\"});\r\n        dispatch({field: \"image\", value: \"\"});\r\n    }\r\n\r\n    const submitPost = () => {\r\n\r\n        let found = false;\r\n\r\n        if(!isLogged){\r\n            return;\r\n        }\r\n\r\n        if (createdTag !== ''){\r\n            for (let singleTag of tagOptions){\r\n                if(singleTag.label === createdTag.toLowerCase()){\r\n                    found = true;\r\n                    tagErrorRef.current.textContent = 'Tag already Exists!, automatically selected it for you.';\r\n                    break;\r\n                }\r\n            }\r\n            if (!found){\r\n                let tagStorageRef = firebase.firestore().collection('tags');\r\n                tagStorageRef.add({\r\n                    name: createdTag,\r\n                })\r\n            }\r\n        }\r\n\r\n        if (tag === '' && createdTag === ''){\r\n            alert(\"Please Select a tag\");\r\n            return;\r\n        }\r\n\r\n        if(title === '' || (title.length >= 70)){\r\n            let text = title.length >= 70 \r\n                                ? \"Enter Less Than 70 Characters for Title\" \r\n                                : \"Title can't be empty\";\r\n            titleErrorRef.current.textContent = text;\r\n            return;\r\n        }\r\n        if(about === '' || about.length >= 200){\r\n            let text = about.length >= 200 \r\n                                ? \"Enter Less Than 200 Characters\" \r\n                                : \"Please Dont Leave This Empty\";\r\n            aboutErrorRef.current.textContent = text;\r\n        }\r\n\r\n        if(image.invalid || image === ''){\r\n            alert('please enter a valid image');\r\n            return;\r\n        } \r\n    \r\n        aboutErrorRef.current.textContent = '';\r\n        titleErrorRef.current.textContent = '';\r\n        tagErrorRef.current.textContent = '';\r\n\r\n        setLoading(true);\r\n\r\n        let tagToBeAdded = createdTag ? createdTag : tag.value;\r\n\r\n        let user = firebase.auth().currentUser;\r\n\r\n        const metadata = {\r\n            contentType: image.type,\r\n        }\r\n\r\n        const storageRef = firebase.storage().ref();\r\n        const documentIdentification = uuidv4();\r\n\r\n        const task = storageRef.child(`pins/${user.uid}/${documentIdentification}`).put(image, metadata)\r\n\r\n        let fullPath = '';\r\n        task\r\n        .then(snapshot => {\r\n            fullPath = snapshot.ref.fullPath;\r\n            return snapshot.ref.getDownloadURL()\r\n        })\r\n        .then(url => {\r\n            //console.log(url)\r\n\r\n            let dbRef = firebase.firestore().collection('posts')\r\n                        .doc(user.uid).collection('userPosts');\r\n            dbRef.add({\r\n                title: title,\r\n                about: about,\r\n                url: url,\r\n                comments : 0,\r\n                created: firebase.firestore.Timestamp.fromDate(new Date()),\r\n                tag: tagToBeAdded,\r\n                by: user.uid,\r\n                path: fullPath,\r\n            }).then(docRef => {\r\n                firebase.firestore().collection('posts').doc(user.uid)\r\n                        .collection('userPosts').doc(docRef.id).update({\r\n                            docId: docRef.id,\r\n                        }).then(() => {\r\n                            resetValues();\r\n                            setLoading(false);\r\n                            setRedirect(true);\r\n                        })\r\n            }).catch(err => {\r\n                alert(err);\r\n                setLoading(false);\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"pin-build-container\">\r\n            {redirect ? <Redirect to=\"/main\"/> : ''}\r\n            <div className=\"main-container\" ref={containerRef}>\r\n                <div className=\"row\">\r\n                    <div className=\"col l2 left\">\r\n                        <div className=\"drop-zone-container\">\r\n                            <div className=\"left\">\r\n                                <div className=\"content center\">\r\n                                    <DropZone handleImageChange={handleImageChange}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"col l7 right pin-information-container\" ref={pcRef}>\r\n                        <div className=\"center upper-header\">Create a New Pin</div>\r\n                        <div className=\"main-title black-text\">\r\n                            <input\r\n                                className=\"title-input center\"\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                value={title}\r\n                                onChange={handleChange}\r\n                                placeholder=\"Add Your Title\"/>\r\n                                <div ref={titleErrorRef} className=\"error center\"></div>\r\n                        </div>\r\n                        <div className=\"user-info-container center\">\r\n                            {user.length > 0 ? <div className=\"user-info\">\r\n                                {!(!!user[1]) ? <i\r\n                                    className={`material-icons icon-placeholder ${user[1] === '' ? '' : 'hide'}`}>\r\n                                    account_circle\r\n                                </i> :\r\n                                <img src={user[1]} className=\"pin-user\" alt=\"user-icon\"></img>}\r\n                                <span className=\"user-name\">{user[0]}</span>\r\n                            </div> : ''}\r\n                        </div>\r\n\r\n                        <div className=\"pin-about-container\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"pin-about-input center\"\r\n                                value={about}\r\n                                name=\"about\"\r\n                                onChange={handleChange}\r\n                                placeholder=\"Tell everyone what your pin is about\"/>\r\n                                <div ref={aboutErrorRef} className=\"center error\"></div>\r\n                        </div>\r\n                        <div className=\"tag-container\">\r\n                            <Select\r\n                                name=\"tag\"\r\n                                placeholder=\"Select Tag\"\r\n                                options={tagOptions}\r\n                                onChange={handleTagChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"general-container\">\r\n                            <div className=\"center\">OR</div>\r\n                        </div>\r\n                        <div className=\"tag-creater-container center\">\r\n                            <input\r\n                                className=\"p-input center\"\r\n                                type=\"text\"\r\n                                name=\"createdTag\"\r\n                                value={createdTag}\r\n                                onChange={handleChange}\r\n                                placeholder=\"Type Your Own Tag(no spaces)\"/>\r\n                                <div ref={tagErrorRef} className=\"center error\"></div>\r\n                        </div>\r\n                        <div className=\"submit-btn center\">\r\n                            <button\r\n                                className=\"s-button redbg-color main-button\"\r\n                                onClick={submitPost}>\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                        <div className={`overlay ${!loading ? 'hide' : ''}`}></div>\r\n                        <img src={logo} className={`main-loader ${!loading ? 'hide' : ''}`} alt='loader'/>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* FOR MOBILE */}\r\n            <div className=\"col l7 center hide\" ref={mobileRef}>\r\n                    <div className=\"center upper-header\">Create a New Pin</div>\r\n                    <div className=\"main-title black-text\">\r\n                        <input\r\n                            className=\"title-input center\"\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            value={title}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Add Your Title\"/>\r\n                            <div ref={titleErrorRef} className=\"error center\"></div>\r\n                    </div>\r\n                    <div className=\"user-info-container center\">\r\n                        {user.length > 0 ? <div className=\"user-info\">\r\n                            {!(!!user[1]) ? <i\r\n                                className={`material-icons icon-placeholder ${user[1] === '' ? '' : 'hide'}`}>\r\n                                account_circle\r\n                            </i> :\r\n                            <img src={user[1]} className=\"pin-user\" alt=\"user-icon\"></img>}\r\n                            <span className=\"user-name\">{user[0]}</span>\r\n                        </div> : ''}\r\n                    </div>\r\n\r\n                    <div className=\"pin-about-container\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"pin-about-input center\"\r\n                            value={about}\r\n                            name=\"about\"\r\n                            onChange={handleChange}\r\n                            placeholder=\"Tell everyone what your pin is about\"/>\r\n                            <div ref={aboutErrorRef} className=\"center error\"></div>\r\n                    </div>\r\n                    <div className=\"tag-container\">\r\n                        <Select\r\n                            name=\"tag\"\r\n                            placeholder=\"Select Tag\"\r\n                            options={tagOptions}\r\n                            onChange={handleTagChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"general-container\">\r\n                        <div className=\"center\">OR</div>\r\n                    </div>\r\n                    <div className=\"tag-creater-container center\">\r\n                        <input\r\n                            className=\"p-input center\"\r\n                            type=\"text\"\r\n                            name=\"createdTag\"\r\n                            value={createdTag}\r\n                            onChange={handleChange}\r\n                            placeholder=\"Type Your Own Tag(no spaces)\"/>\r\n                            <div ref={tagErrorRef} className=\"center error\"></div>\r\n                    </div>\r\n                    <div className=\"submit-btn center\">\r\n                        <button\r\n                            className=\"s-button redbg-color main-button\"\r\n                            onClick={submitPost}>\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                    <div className={`overlay ${!loading ? 'hide' : ''}`}></div>\r\n                    <img src={logo} className={`main-loader ${!loading ? 'hide' : ''}`} alt='loader'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PhotoGrid from './PhotoGrid';\r\nimport logo from '../images/logo.svg';\r\nimport * as firebase from 'firebase/app';\r\nimport './styles/Main.css';\r\n\r\nexport default function Main(){\r\n    let [preferences, setPreferences] = useState([]);\r\n    let [tags, setTags] = useState([]);\r\n    let [selectedTags, setSelectedTags] = useState([]);\r\n    let [ loading, setLoading ] = useState(true);\r\n    let isLogged = useSelector(state => state.isLogged)\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        getTags();\r\n\r\n        if(isLogged){\r\n            let user = firebase.auth().currentUser;\r\n            if(!!user){\r\n                let userRef = firebase.firestore().collection('users').doc(user.uid);\r\n                userRef.get().then(userData => {\r\n                    userData = userData.data();\r\n                    if(!(!!userData)){\r\n                        setPreferences('none');\r\n                        setLoading(false);\r\n                        return;\r\n                    }\r\n\r\n                    if ( !(!!userData.preferences) || userData.preferences.length === 0){\r\n                        setPreferences('none');\r\n                        setLoading(false);\r\n                    } else {\r\n                        setPreferences(userData.preferences);\r\n                        setLoading(false);\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n\r\n        return () => {\r\n            console.log('aborting main')\r\n            abortController.abort();\r\n        }\r\n    }, [isLogged ])\r\n\r\n    // getting all tags from firestore\r\n    function getTags(){\r\n        let arr = [];\r\n        firebase.firestore().collection('tags').get().then(snapshot => {\r\n            snapshot.docs.forEach(snap => {\r\n                arr.push(snap.data().name);\r\n            })\r\n        }).then(() => {\r\n            setTags(arr);\r\n        })\r\n    }\r\n\r\n    // letting user select the tag that they want to include\r\n    // in their preferences list\r\n    const selectTag = (e) => {\r\n        let target = e.target.classList\r\n        let dataName = e.target.dataset.name;\r\n\r\n        if (target.contains('tag-selected')){\r\n            target.remove('tag-selected');\r\n            let selected = selectedTags;\r\n            let index = selected.indexOf(dataName);\r\n            selected.splice(index, 1);\r\n            setSelectedTags(selected);\r\n\r\n        } else {\r\n            target.add('tag-selected');\r\n            let selected = selectedTags;\r\n            selected.push(dataName);\r\n            setSelectedTags(selected);   \r\n        }\r\n    }\r\n\r\n    // saving users preferences tags to firestore\r\n    const savePref = () => {\r\n        if (selectedTags.length === 0){\r\n            alert('You Need To Select Atleast One Tag!');\r\n        } else {\r\n            let user = firebase.auth().currentUser;\r\n            firebase.firestore().collection('users').doc(user.uid).update({\r\n                preferences : selectedTags\r\n            }).then(() => {\r\n                setPreferences(selectedTags);\r\n            })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {preferences === 'none' ? <div className=\"pref-modal\">\r\n                <div className=\"center small-text bold-weight\">Which topics do you want to see more of?</div>\r\n                <div className=\"pref-container\">\r\n                    <div className=\"row\">\r\n                        {tags.map((tag, index) => {\r\n                            return(\r\n                                <div\r\n                                    key={index}\r\n                                    data-name={tag}\r\n                                    className=\"col l5 m12 s12 pref\"\r\n                                    onClick={selectTag}>\r\n                                        {tag}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <div className=\"center\">\r\n                    <button className=\"s-button pref-button\" onClick={savePref}>Done</button>\r\n                </div>\r\n            </div> : ''}\r\n            {(preferences !== 'none' && preferences.length !== 0)\r\n                ? <PhotoGrid pref={preferences}/>\r\n                : ''}\r\n            {(!isLogged && tags.length !== 0)\r\n                ? <PhotoGrid pref={tags}/>\r\n                : ''}\r\n            \r\n            <div className={`${!loading ? 'hide' : 'center'}`}>\r\n                <img src={logo} alt=\"loading\" className=\"loaderv2\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport * as firebase from 'firebase/app';\r\n\r\nexport default function Comment(props){\r\n    const commentData = props.data\r\n    let [likes, setLikes] = useState(0);\r\n    const [profileImage, setProfileImage] = useState('');\r\n    const [name, setName] = useState([]);\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    let [isDeleted, setIsDeleted] = useState(false);\r\n    let [isCurrent, setIsCurrent] = useState(false);\r\n    let isLogged = useSelector(state => state.isLogged);\r\n\r\n    useEffect(() => {\r\n\r\n        let abortController = new AbortController();\r\n        \r\n        let commenter = commentData.by;\r\n        let ref = firebase.firestore().collection('users').doc(commenter);\r\n        ref.get().then(snapshot => {\r\n            let data = snapshot.data();\r\n            let {profileImage, firstName, lastName, username} = data;\r\n            let fullName = `${!!firstName ? firstName : ''} ${!!lastName ? lastName : ''}`;\r\n            profileImage = !!profileImage ? profileImage : '';\r\n            let profileData = [fullName, username];\r\n            setProfileImage(profileImage);\r\n            setName(profileData);\r\n        }).catch(err => console.log(err.message))\r\n\r\n        let commentStoreRef = firebase.firestore()\r\n                                    .collectionGroup('userLikes')\r\n                                    .where('postId', '==', commentData.post)\r\n                                    .where('commentBy', '==', commentData.by)\r\n                                    .where('commentId', '==', commentData.commentId)\r\n        commentStoreRef.get().then(snapshot => {\r\n            let likes = snapshot.docs.length;\r\n            setLikes(likes);\r\n        }).catch(err => console.log(err.message))\r\n\r\n        if (isLogged){\r\n            let user = firebase.auth().currentUser;\r\n\r\n            if(!!user){\r\n                // reference to the collection where data about user\r\n                // liked comments is stored\r\n                let userCommentStoreRef = firebase.firestore()\r\n                                        .collectionGroup('userLikes')\r\n                                        .where('postId', '==', commentData.post)\r\n                                        .where('likedBy', '==', user.uid)\r\n                                        .where('commentBy', '==', commentData.by)\r\n                                        .where('commentId', '==', commentData.commentId)\r\n\r\n                // check if the logged in user has liked the comment before\r\n                userCommentStoreRef.get().then(snapshot => {\r\n\r\n                    // if any docs come back then user has liked it before\r\n                    let likes = snapshot.docs.length;\r\n                    if (likes > 0){\r\n                        setIsLiked(true);\r\n                    }\r\n                }).catch(err => console.log(err.message))\r\n\r\n                // if the current user is the commenter\r\n                if(user.uid === commentData.by){\r\n                    setIsCurrent(true);\r\n                }\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            abortController.abort();\r\n        }\r\n    }, [commentData, isLogged])\r\n\r\n    const likeComment = () => {\r\n        if (!isLogged || isLiked){\r\n            alert('Please Login to perform this action')\r\n            return;\r\n        }\r\n        let user = firebase.auth().currentUser;\r\n        let commentStoreRef = firebase.firestore().collection('commentlikes').doc(user.uid).collection('userLikes');\r\n        commentStoreRef.add({\r\n            postId : commentData.post,\r\n            commentBy: commentData.by,\r\n            commentId: commentData.commentId,\r\n            likedBy: user.uid,\r\n        }).then(() => {\r\n            setIsLiked(true)\r\n            setLikes(prevState => prevState + 1)\r\n        }).catch(err => console.log(err.message))\r\n    }\r\n\r\n    const unlikeComment = () => {\r\n        if (!isLogged || !isLiked){\r\n            alert('Please Login to perform this action')\r\n            return;\r\n        }\r\n        let user = firebase.auth().currentUser;\r\n        let commentStoreRef = firebase.firestore()\r\n                                .collectionGroup('userLikes')\r\n                                .where('postId', '==', commentData.post)\r\n                                .where('likedBy', '==', user.uid)\r\n                                .where('commentBy', '==', commentData.by)\r\n                                .where('commentId', '==', commentData.commentId)\r\n        commentStoreRef.get().then(snapshot => {\r\n            let doc = snapshot.docs[0];\r\n            doc.ref.delete().then(() => {\r\n                setIsLiked(false);\r\n                setLikes(prevState => prevState - 1)\r\n            })\r\n        }).catch(err => console.log(err.message))\r\n    }\r\n\r\n    const deleteComment = () => {\r\n        if (!isLogged && !isCurrent){\r\n            alert('login to perform this action')\r\n            return;\r\n        }\r\n        let user = firebase.auth().currentUser;\r\n\r\n        // firestore comment likes reference\r\n        let likeStoreRef = firebase.firestore()\r\n                                .collectionGroup('userLikes').where('commentId', '==', commentData.commentId)\r\n        // firestore comment reference\r\n        let commentStoreRef = firebase.firestore().collection('comments').doc(user.uid)\r\n                                .collection('userComments').doc(commentData.commentId);\r\n        \r\n        // firestore post reference\r\n        let postRef = firebase.firestore().collectionGroup('userPosts').where('docId', '==', commentData.post);\r\n        postRef.get().then(snapshot => {\r\n            let doc = snapshot.docs[0];\r\n            let totalComments = doc.data().comments - 1;\r\n            doc.ref.update({comments: totalComments}).then(() => {\r\n                props.changeComments(totalComments);\r\n            })\r\n        })\r\n\r\n        // delete the comment and...\r\n        commentStoreRef.delete().then(() => {\r\n\r\n            // get all the likes stored and delete them\r\n            likeStoreRef.get().then(snapshot => {\r\n                snapshot.docs.forEach(snap => {\r\n                    snap.ref.delete()\r\n                })\r\n            }).then(() => {\r\n                // then hide from the DOM\r\n                setIsDeleted(true);\r\n\r\n            }).catch(err => console.log(err.message))\r\n\r\n        }).catch(err => console.log(err.message))\r\n    }\r\n\r\n    return(\r\n        <div className={`row p-comment-container ${isDeleted ? \"hide\" : ''}`}>\r\n            <div className=\"col l2\">\r\n                {profileImage === ''\r\n                    ? <Link to={`/user/${name[1]}`}>\r\n                        <i className=\"material-icons\">account_circle</i>\r\n                      </Link>\r\n                    : <Link to={`/user/${name[1]}`}>\r\n                        <img src={profileImage} alt=\"profile_picture\" className=\"pin-user-image fix-location\" />\r\n                      </Link>}\r\n            </div>\r\n            <br />\r\n            <div className=\"col l3\">\r\n                {name.length !== 0\r\n                    ? <div>\r\n                        <div className=\"comment-username\">{name[0]}</div>\r\n                     </div>\r\n                    : ''}\r\n            </div>\r\n            <div className=\"col l12 left text-container\">\r\n                <div className=\"comment-message\">{commentData.comment}</div>\r\n            </div>\r\n            <div className=\"col l3 icon-container\">\r\n                {isLiked === false ? <i\r\n                    className=\"material-icons comment-icons\"\r\n                    onClick={likeComment}>\r\n                    favorite_border\r\n                </i> : <i\r\n                    className=\"material-icons comment-icons\"\r\n                    onClick={unlikeComment}>\r\n                    favorite\r\n                </i>}\r\n                {likes}\r\n                {isCurrent \r\n                    ? <i\r\n                        className=\"material-icons right comment-icons\"\r\n                        onClick={deleteComment}>\r\n                            delete\r\n                    </i>\r\n                    : ''}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState, useRef} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport Comment from './PinInfo-Comment';\r\nimport * as firebase from 'firebase/app';\r\nimport './styles/PinInfo.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport PhotoGrid from './PhotoGrid';\r\n\r\nexport default function PinInfo(props){\r\n    let {pinid} = useParams();\r\n    let [allComments, setAllComments] = useState([]);\r\n    let [numberOfComments, setNumberOfComments] = useState(0);\r\n    let [pinInfo, setPinInfo] = useState([]);\r\n    let [userInfo, setUserInfo] = useState([]);\r\n    let [tags, setTags] = useState([]);\r\n    let [userFollowers, setUserFollowers] = useState(0);\r\n    let [isCurrent, setIsCurrent] = useState(false);\r\n    let [sendToMain, setSendToMain] = useState(false);\r\n    let [comment, setComment] = useState('');\r\n    let [isFollowed, setIsFollowed] = useState(false);\r\n    let isLogged = useSelector(state => state.isLogged)\r\n\r\n    let commentAreaRef = useRef();\r\n    let commentRef = useRef();\r\n    let saveRef = useRef();\r\n    let cancelRef = useRef();\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        let ref = firebase.firestore().collectionGroup('userPosts').where('docId', '==', pinid);\r\n        let commentStoreRef = firebase.firestore().collectionGroup('userComments').where('post', '==', pinid)\r\n\r\n        let arr = [];\r\n        commentStoreRef.orderBy('date', 'desc').get().then(snapshot => {\r\n            snapshot.docs.forEach(snap => {\r\n                if(!!snap){\r\n                    arr.push(snap.data())\r\n                }\r\n            })\r\n        }).then(() => {\r\n            setAllComments(arr);\r\n        })\r\n\r\n        ref.get().then(snapshots => {\r\n            console.log(snapshots.docs)\r\n            let data = snapshots.docs[0].data();\r\n            let {url, by, docId, title, about, comments, tag, path} = data;\r\n            const pinInfo = [url, about, docId, title, tag, by, path];\r\n            setPinInfo(pinInfo);\r\n            setNumberOfComments(comments);\r\n            setTags([tag]);\r\n\r\n            let userRef = firebase.firestore().collection('users').doc(by)\r\n\r\n            userRef.get().then(snapshot => {\r\n                let data = snapshot.data();\r\n                if(!!data){\r\n                    let {profileImage, firstName, lastName, username} = data;\r\n                    let fullName = `${!!firstName ? firstName : ''} ${!!lastName ? lastName : ''}`;\r\n                    profileImage = !!profileImage ? profileImage : 'none';\r\n                    const userInfo = [fullName, username, profileImage];\r\n\r\n                    setUserInfo(userInfo);\r\n\r\n                    let followerRef = firebase.firestore().collectionGroup('userFollowing')\r\n                    followerRef.where('following', '==', by).get().then(snapshot => {\r\n                        let followers = snapshot.docs.length;\r\n                        setUserFollowers(followers);\r\n                    })\r\n                }\r\n            }).catch(err => alert(err.message))\r\n\r\n            // if the user visiting the page is the same as the one who\r\n            // created the pin\r\n            if (isLogged){\r\n                let user = firebase.auth().currentUser;\r\n                if (by === user.uid){\r\n                    setIsCurrent(true);\r\n                } else {\r\n                    let ref = firebase.firestore().collection('following').doc(user.uid).collection('userFollowing');\r\n                    ref.where('following', '==', pinInfo[5]).get().then(snapshot => {\r\n                        if(snapshot.docs.length > 0){\r\n                            setIsFollowed(true);\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n\r\n        }).catch(err => alert(err.message))\r\n\r\n        return () => {\r\n            console.log('aborting pininfo')\r\n            abortController.abort();\r\n        }\r\n    }, [pinid, isLogged])\r\n\r\n    const commentDisplayToggle = (e) => {\r\n        let target = e.target;\r\n        if (commentRef.current.classList.contains('hide')){\r\n            target.textContent = \"keyboard_arrow_down\";\r\n            commentRef.current.classList.remove('hide')\r\n        } else {\r\n            target.textContent = \"keyboard_arrow_right\";\r\n            commentRef.current.classList.add('hide')\r\n        }\r\n    }\r\n\r\n    const showButtons = (e) => {\r\n        const target = e.target;\r\n        target.classList.add('bigger-input');\r\n        cancelRef.current.classList.remove('hide');\r\n        saveRef.current.classList.remove('hide');\r\n    }\r\n\r\n    const cancelComment = (e) => {\r\n        cancelRef.current.classList.add('hide');\r\n        saveRef.current.classList.add('hide');\r\n        commentAreaRef.current.classList.remove('bigger-input');\r\n        setComment('');\r\n    }\r\n\r\n    const sendComment = (e) => {\r\n        if (comment === ''){\r\n            alert(\"Please don't try to send an empty comment!\");\r\n            return;\r\n        }\r\n        if(!isLogged){\r\n            alert(\"Please login to perform this action!\");\r\n            return;\r\n        }\r\n\r\n        let target = e.target;\r\n        target.disabled = true;\r\n\r\n        let user = firebase.auth().currentUser;\r\n        let ref = firebase.firestore().collection('comments').doc(user.uid).collection('userComments');\r\n        ref.add({\r\n            post: pinid,\r\n            by: user.uid,\r\n            comment: comment,\r\n            date: firebase.firestore.FieldValue.serverTimestamp(),\r\n            likes: 0,\r\n        }).then((snapshot) => {\r\n\r\n            ref.doc(snapshot.id).update({\r\n                commentId: snapshot.id,\r\n            })\r\n            let totalComments = numberOfComments;\r\n            let by = pinInfo[5];\r\n\r\n            let pinRef = firebase.firestore().collection('posts').doc(by).collection('userPosts');\r\n            totalComments = totalComments + 1;\r\n            \r\n            pinRef.doc(pinid).update({comments : totalComments}).then(() => {\r\n\r\n                // enabling the button\r\n                target.disabled = false;\r\n\r\n                // close comment input\r\n                cancelComment();\r\n\r\n                // increase the total number of comments in the state\r\n                setNumberOfComments(prevState => prevState + 1);\r\n                \r\n                // add the comment to the state\r\n                snapshot.get().then(snapshot => {\r\n                    setAllComments(prevState => [...prevState, snapshot.data()])\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    const changeComments = (value) => {\r\n        setNumberOfComments(value);\r\n    }\r\n\r\n    const followUser = () => {\r\n        if(!isLogged || isCurrent){\r\n            alert('Please login to perform this action!');\r\n            return;\r\n        }\r\n        if (isFollowed){\r\n            alert('Cannot follow the same person twice!')\r\n        }\r\n\r\n        let user = firebase.auth().currentUser;\r\n        let ref = firebase.firestore().collection('following').doc(user.uid).collection('userFollowing');\r\n        ref.add({\r\n            following: pinInfo[5],\r\n            by: user.uid,\r\n        }).then(() => {\r\n            setIsFollowed(true);\r\n        })\r\n    }\r\n\r\n    const unfollowUser = () => {\r\n        if(!isLogged || isCurrent){\r\n            alert('Please login to perform this action!');\r\n            return;\r\n        }\r\n        if (!isFollowed){\r\n            alert('Cannot unfollow the same person twice!')\r\n        }\r\n\r\n        let user = firebase.auth().currentUser;\r\n        let ref = firebase.firestore().collection('following').doc(user.uid).collection('userFollowing');\r\n        ref.where('following', '==', pinInfo[5]).get().then(snapshot => {\r\n            let doc = snapshot.docs[0];\r\n            doc.ref.delete().then(() => {\r\n                setIsFollowed(false);\r\n            })\r\n        })\r\n    }\r\n\r\n    const deletePin = () => {\r\n        if(!isLogged && !isCurrent){\r\n            alert('please login to perform this action!');\r\n            return;\r\n        }\r\n\r\n        let storageRef = firebase.storage().ref().child(pinInfo[6]);\r\n\r\n        let ref = firebase.firestore().collectionGroup('userPosts').where('docId', '==', pinid);\r\n        let commentStoreRef = firebase.firestore().collectionGroup('userComments').where('post', '==', pinid)\r\n        ref.get().then(snapshot => {\r\n            snapshot.docs.forEach(snap => {\r\n                snap.ref.delete()\r\n            })\r\n        }).then(() => {\r\n            storageRef.delete();\r\n            setSendToMain(true)\r\n        })\r\n\r\n        commentStoreRef.get().then(snapshot => {\r\n            snapshot.docs.forEach(snap => {\r\n                let likeStoreRef = firebase.firestore()\r\n                                .collectionGroup('userLikes').where('commentId', '==', snap.data().commentId)\r\n                likeStoreRef.get().then(snapshots => {\r\n                    snapshots.docs.forEach(snap => {\r\n                        snap.ref.delete()\r\n                    })\r\n                }).then(() => {\r\n                    snap.ref.delete().then(() => {\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    const savePin = () => {\r\n        if(!isLogged || isCurrent){\r\n            alert('Login to perform this action!');\r\n            return;\r\n        }\r\n        if(isCurrent){\r\n            alert('Dont Save Your Own Pin!');\r\n            return;\r\n        }\r\n\r\n        let user = firebase.auth().currentUser\r\n        let ref = firebase.firestore().collection('savedPins').doc(user.uid).collection('userSaved');\r\n        ref.add({\r\n            savedOn: firebase.firestore.Timestamp.fromDate(new Date()),\r\n            savedBy: user.uid,\r\n            postId: pinInfo[2]\r\n        }).then(alert('saved'))\r\n        .catch(err => console.log(err.message))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {sendToMain ? <Redirect to=\"/main\" /> : ''}\r\n            <div className=\"row\">\r\n                <div className=\"col l1 s6 backward-button-container\">\r\n                    <Link to=\"/main\">\r\n                        <i className=\"material-icons right pin-icon\">keyboard_backspace</i>\r\n                    </Link>\r\n                </div>\r\n                {pinInfo.length !== 0\r\n                ? <React.Fragment>\r\n                    <div className=\"col l5 m8 pin-image-container\">\r\n                        <a href={`${pinInfo[0]}`} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                            <img src={pinInfo[0]} alt=\"pin\" className=\"pin-image\" />\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"col l5 info-container\">\r\n                        <div className=\"col l12\">\r\n                            <div className=\"left\">\r\n                                <a href={`${pinInfo[0]}`} download rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <i className=\"material-icons pin-icon\">cloud_download</i>\r\n                                </a>\r\n                                {isCurrent === true\r\n                                    ? <i\r\n                                        className=\"material-icons pin-icon\"\r\n                                        onClick={deletePin}>delete</i>\r\n                                    : ''}\r\n                            </div>\r\n                            <div className=\"right\">\r\n                                <button\r\n                                    className=\"s-button redbg-color save-btn\"\r\n                                    onClick={savePin}>\r\n                                        Save\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col l12\">\r\n                            <div className=\"bold-weight pin-title\">{pinInfo[3]}</div>\r\n                        </div>\r\n                        {userInfo.length !== 0\r\n                            ? <div className=\"col l12 uploaders-info\">\r\n                                Uploaded By\r\n                                <span> </span>\r\n                                <Link to={`/user/${userInfo[1]}`}>\r\n                                    <span className=\"bold-weight name-link\">{userInfo[0] !== '' ? userInfo[0] : 'Nameless User'}</span>\r\n                                </Link>\r\n                            </div>\r\n                            : ''}\r\n\r\n                        {userInfo.length !== 0\r\n                            ? <div className=\"col l12 user-images\">\r\n                                {userInfo[2] === 'none'\r\n                                    ?<Link to={`/user/${userInfo[1]}`}>\r\n                                        <i className=\"material-icons pin-user-icon\">account_circle</i>\r\n                                    </Link>\r\n                                    :<Link to={`/user/${userInfo[1]}`}> <img\r\n                                        src={userInfo[2]}\r\n                                        alt=\"userprofileimage\"\r\n                                        className=\"pin-user-image\" /> </Link> }\r\n                                <div className=\"user-nf-container\">\r\n                                    <span className=\"users-name bold-weight name-link\">{userInfo[0]}</span>\r\n                                    <div className=\"users-followers\">{userFollowers} followers</div>\r\n                                </div>\r\n                                <div className=\"follow-btn-container\">\r\n                                    {isCurrent\r\n                                        ? <i className=\"material-icons emote\">tag_faces</i> \r\n                                        : <div>\r\n                                            {!isFollowed\r\n                                                ? <button\r\n                                                    onClick={followUser}\r\n                                                    className=\"s-button right bold-weight redbg-color\">\r\n                                                        Follow\r\n                                                 </button>\r\n                                                : <button\r\n                                                    onClick={unfollowUser}\r\n                                                    className=\"s-button right bold-weight\">\r\n                                                        Unfollow\r\n                                                </button>}\r\n                                        </div>}\r\n                                </div>\r\n                              </div>\r\n                            : ''}\r\n                            <div className=\"col l12 comments-container\">\r\n                                <div className=\"comments bold-weight\">\r\n                                    {numberOfComments} comments\r\n                                    <i\r\n                                        className=\"material-icons comment-opener\"\r\n                                        onClick={commentDisplayToggle}>\r\n                                            keyboard_arrow_right\r\n                                    </i>\r\n                                    <div ref={commentRef} className=\"all-comments hide\">\r\n                                        <div className=\"comment-input-box\">\r\n                                            <textarea \r\n                                                className=\"comment-text\"\r\n                                                placeholder=\"Enter A Comment\"\r\n                                                ref={commentAreaRef}\r\n                                                value={comment}\r\n                                                onChange={(e) => {setComment(e.target.value)}}\r\n                                                onClick={showButtons}\r\n                                            />\r\n                                            <button\r\n                                                ref={cancelRef}\r\n                                                className=\"s-button hide\"\r\n                                                onClick={cancelComment}>\r\n                                                    Cancel\r\n                                            </button>\r\n                                            <button\r\n                                                ref={saveRef}\r\n                                                className=\"s-button hide redbg-color\"\r\n                                                onClick={sendComment}>\r\n                                                    Send\r\n                                            </button>\r\n                                            {allComments.length !== 0\r\n                                                ? <div>\r\n                                                    {allComments.map((comment, index) => {\r\n                                                        return (\r\n                                                            <Comment\r\n                                                                changeComments={changeComments}\r\n                                                                key={index}\r\n                                                                data={comment}\r\n                                                            />\r\n                                                        )\r\n                                                    })}\r\n                                                </div>\r\n                                                : ''}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </React.Fragment>\r\n                : ''}\r\n            </div>\r\n            <div className=\"center\">More Like This!</div>\r\n            <div className=\"\">\r\n                {tags.length !== 0\r\n                    ? <PhotoGrid pref={tags} />\r\n                    : ''}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport logo from '../images/logo.svg';\r\nimport * as firebase from 'firebase/app';\r\nimport PhotoGrid from './PhotoGrid';\r\n\r\nexport default function Following(){\r\n    let isLogged = useSelector(state => state.isLogged);\r\n    let [loading, setLoading] = useState(true);\r\n    let [following, setFollowing] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        if(isLogged){\r\n\r\n            let arr = [];\r\n            let user = firebase.auth().currentUser;\r\n            if(!!user){\r\n                let followingRef = firebase.firestore().collection('following').doc(user.uid).collection('userFollowing');\r\n                followingRef.get().then(snapshot => {\r\n                    snapshot.docs.forEach(doc => {\r\n                        console.log(doc.data());\r\n                        arr.push(doc.data().following);\r\n                    })\r\n                }).then(() => {\r\n                    setFollowing(arr);\r\n                    setLoading(false);\r\n                })\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            console.log('aborting following');\r\n            abortController.abort();\r\n        }\r\n    }, [isLogged])\r\n\r\n    return(\r\n        <div>\r\n            <div className={`${!loading ? 'hide' : 'center'}`}>\r\n                <img src={logo} alt=\"loading\" className=\"loaderv2\"/>\r\n            </div>\r\n\r\n            <div>\r\n                {following.length !== 0\r\n                    ? <PhotoGrid following={following}/>\r\n                    : <div className=\"center\">No Posts</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport * as firebase from 'firebase/app';\r\nimport {useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function UserBox(props){\r\n    const [userData, setUserData] = useState([]);\r\n    const [isCurrent, setIsCurrent] = useState(false);\r\n    const [isFollowed, setIsFollowed] = useState(false);\r\n    const isLogged = useSelector(state => state.isLogged);\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        if (!(!!props.data)){\r\n            return;\r\n        }\r\n        let ref = firebase.firestore().collection('users').doc(props.data)\r\n        ref.get().then(snapshot => {\r\n            setUserData(snapshot.data());\r\n        })\r\n\r\n        if(isLogged){\r\n            let user = firebase.auth().currentUser;\r\n            if(!!user){\r\n                if(user.uid === props.data){\r\n                    setIsCurrent(true);\r\n                } else {\r\n                    let ref = firebase.firestore().collection('following').doc(user.uid).collection('userFollowing');\r\n                    ref.where('following', '==', props.data).get().then(snapshot => {\r\n                        if(snapshot.docs.length > 0){\r\n                            setIsFollowed(true);\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            console.log('aborting userboxes')\r\n            abortController.abort();\r\n        }\r\n    }, [props.data, isLogged])\r\n\r\n    const followUser = () => {\r\n        if(!isLogged || isCurrent){\r\n            alert('Please login to perform this action!');\r\n            return;\r\n        }\r\n        if (isFollowed){\r\n            alert('Cannot follow the same person twice!')\r\n        }\r\n\r\n        let user = firebase.auth().currentUser;\r\n        let ref = firebase.firestore().collection('following').doc(user.uid).collection('userFollowing');\r\n        ref.add({\r\n            following: props.data,\r\n            by: user.uid,\r\n        }).then(() => {\r\n            setIsFollowed(true);\r\n        })\r\n    }\r\n\r\n    const unfollowUser = () => {\r\n        if(!isLogged || isCurrent){\r\n            alert('Please login to perform this action!');\r\n            return;\r\n        }\r\n        if (!isFollowed){\r\n            alert('Cannot unfollow the same person twice!')\r\n        }\r\n\r\n        let user = firebase.auth().currentUser;\r\n        let ref = firebase.firestore().collection('following').doc(user.uid).collection('userFollowing');\r\n        ref.where('following', '==', props.data).get().then(snapshot => {\r\n            let doc = snapshot.docs[0];\r\n            doc.ref.delete().then(() => {\r\n                setIsFollowed(false);\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"col l4 m8 s12 user-container center bordered\">\r\n            <div className=\"left user-image-container\">\r\n                {!!userData.profileImage\r\n                    ? <Link to={`/user/${userData.username}`}>\r\n                        <img className=\"account-image\" src={userData.profileImage} alt=\"profileimage\" />\r\n                     </Link>\r\n                    : <Link to={`/user/${userData.username}`}>\r\n                        <i className=\"material-icons account-icon a-i\">account_circle</i>\r\n                    </Link>}\r\n            </div>\r\n            <div className=\"left\">\r\n                <div className=\"col l12 users-name bold-weight\">\r\n                <Link to={`/user/${userData.username}`}>\r\n                    {!!userData.firstName ? `${userData.firstName} ` : ''} \r\n                    {!!userData.lastName ? userData.lastName : ''}\r\n                </Link>\r\n                </div>\r\n                <br />\r\n                <div className=\"left col l12 about-container\">\r\n                    {!!userData.about ? `${userData.about}` : ''}\r\n                </div>\r\n            </div>\r\n            <div className=\"right\">\r\n                <div className=\"col l12\">\r\n                    {isLogged && !isFollowed && !isCurrent\r\n                        ? <button\r\n                            className=\"s-button refbg-color\"\r\n                            onClick={followUser}>\r\n                            Follow\r\n                        </button>\r\n                        : ''}\r\n\r\n                    {isLogged && isFollowed && !isCurrent\r\n                        ? <button\r\n                            className=\"s-button white-text blackbg-color\"\r\n                            onClick={unfollowUser}>\r\n                            Unfollow\r\n                         </button>\r\n                        : ''}\r\n\r\n                    {isCurrent\r\n                        ? <button className=\"s-button white-text blackbg-color\">Follows You</button>\r\n                        : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport * as firebase from 'firebase/app';\r\nimport './styles/Following.css';\r\nimport UserBox from './UserFollowing-UserBox';\r\n\r\n\r\nexport default function UserFollowing(props){\r\n    let params = useParams();\r\n    //let [userData, setUserData] = useState([]);\r\n    let [followedUsers, setFollowedUsers] = useState([]);\r\n    let {userid} = params;\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        let ref = firebase.firestore().collection('users')\r\n        let userKey = '';\r\n\r\n        ref.where('username', '==', userid).get().then((snapshots) => {\r\n            snapshots.forEach(snap => {\r\n                userKey = snap.id\r\n                //setUserData(snap.data());\r\n            })\r\n        }).then(() => {\r\n\r\n            let arr = []\r\n            let followingRef = firebase.firestore().collection('following').doc(userKey).collection('userFollowing');\r\n            followingRef.get().then(snapshots => {\r\n                snapshots.docs.forEach(snap => {\r\n                    arr.push(snap.data().following);\r\n                })\r\n            }).then(() => {\r\n                setFollowedUsers(arr);\r\n            })\r\n        })\r\n\r\n        return () => {\r\n            console.log('aborting user following')\r\n            abortController.abort();\r\n        }\r\n    }, [userid])\r\n\r\n\r\n    return(\r\n        <div>\r\n            <br />\r\n            <div className=\"center heading-text\">Following</div>\r\n            <br />\r\n            {followedUsers.length !== 0\r\n                ? <React.Fragment>\r\n                    <div className=\"row\">\r\n                        {followedUsers.map((user, index) => {\r\n                            return (\r\n                                <UserBox data={user} key={index} />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </React.Fragment>\r\n                : <div className=\"center\">None</div>}\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport * as firebase from 'firebase/app';\r\nimport './styles/Following.css';\r\nimport UserBox from './UserFollowing-UserBox';\r\n\r\n\r\nexport default function UserFollowing(props){\r\n    let params = useParams();\r\n    //let [userData, setUserData] = useState([]);\r\n    let [followingUsers, setFollowingUsers] = useState([]);\r\n    let {userid} = params;\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        let ref = firebase.firestore().collection('users')\r\n        let userKey = '';\r\n\r\n        ref.where('username', '==', userid).get().then((snapshots) => {\r\n            snapshots.forEach(snap => {\r\n                userKey = snap.id\r\n                //setUserData(snap.data());\r\n            })\r\n        }).then(() => {\r\n\r\n            let arr = []\r\n            let followingRef = firebase.firestore().collectionGroup('userFollowing').where('following', '==', userKey)\r\n            followingRef.get().then(snapshots => {\r\n                snapshots.docs.forEach(snap => {\r\n                    console.log(snap.data().by)\r\n                    arr.push(snap.data().by);\r\n                })\r\n            }).then(() => {\r\n                setFollowingUsers(arr);\r\n            })\r\n        })\r\n\r\n        return () => {\r\n            console.log('aborting user followers')\r\n            abortController.abort();\r\n        }\r\n    }, [userid])\r\n\r\n\r\n    return(\r\n        <div>\r\n            <br />\r\n            <div className=\"center heading-text\">Followers</div>\r\n            <br />\r\n            {followingUsers.length !== 0\r\n                ? <React.Fragment>\r\n                    <div className=\"row\">\r\n                        {followingUsers.map((user, index) => {\r\n                            return (\r\n                                <UserBox data={user} key={index} />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </React.Fragment>\r\n                : <div className=\"center\">None</div>}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PhotoGrid from './PhotoGrid';\r\n\r\nexport default function Search(props){\r\n    const params = useParams();\r\n\r\n    return(\r\n        <div>\r\n            <br />\r\n            <div className=\"center\">{params.searchid}</div>\r\n            <br />\r\n            <PhotoGrid pref={[params.searchid]}/>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport * as firebase from 'firebase/app';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setTarget, setUser } from '../actions/';\r\n\r\nexport default function SearchedUsers(props){\r\n    let [foundUsers, setFoundUsers] = useState([]);\r\n    const [currentUser, setCurrentUser] = useState([]);\r\n    const isLogged = useSelector(state => state.isLogged);\r\n    const dispatcher = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n        // eslint-disable-next-line\r\n        let user = '';\r\n        if(isLogged){\r\n            // the current user\r\n            user = firebase.auth().currentUser;\r\n            if(!!user){\r\n                firebase.firestore().collection('users').doc(user.uid).get().then((snapshot) => {\r\n                    let data = snapshot.data();\r\n                    data.mainId = snapshot.id; \r\n                    setCurrentUser(data)\r\n                })\r\n            }\r\n        }\r\n\r\n        // if input is empty then return;\r\n        if(props.qData.length === 0){\r\n            setFoundUsers([]);\r\n            return;\r\n        }\r\n\r\n        // refernce to the firestore\r\n        const storeReference = firebase.firestore().collection('users');\r\n\r\n        let arr = [];\r\n\r\n        storeReference.get()\r\n        .then(snapshot => snapshot.docs)\r\n        .then(snapshot => {\r\n            if(snapshot.length === 0){\r\n                setFoundUsers([]);\r\n                return;\r\n            }\r\n\r\n            snapshot.forEach(snap => {\r\n                let docId = snap.id;\r\n                let data = snap.data();\r\n                let {firstName, lastName, username} = data;\r\n                let allData = `${firstName ? firstName  : ''} ${lastName ? lastName : ''} ${username} ${docId}`;\r\n\r\n                if(allData.toLowerCase().includes(props.qData)){\r\n                    data.mainId = docId;\r\n                    arr.push(data);\r\n                }\r\n            })\r\n        })\r\n        .then(() => {\r\n            setFoundUsers(arr);\r\n        })\r\n\r\n\r\n        return () => {\r\n            console.log('aborting search for users')\r\n            abortController.abort();\r\n        }\r\n    }, [props.qData, isLogged])\r\n\r\n    const changeTarget = (value) => {\r\n        dispatcher(setTarget(value));\r\n        dispatcher(setUser(currentUser));\r\n        props.reset();\r\n    }\r\n\r\n    return (\r\n        <div className={`relativized ${props.hidden === true ? 'hide' : ''}`}>\r\n            <div className=\"user-found-panel blue-bordered\">\r\n                {foundUsers.map((cur ,index) => {\r\n                    return (\r\n                        <React.Fragment key={index}>\r\n                            <div className=\"row m-u-container\" onClick={() => {changeTarget(cur)} }>\r\n                                <div className=\"col l3\">\r\n                                    {cur.profileImage\r\n                                        ? <img\r\n                                            src={cur.profileImage}\r\n                                            className=\"account-image m-account-image\" \r\n                                            alt=\"profileimage\"/>\r\n                                        : <i\r\n                                            className=\"material-icons account-icon m-account-icon\">\r\n                                                account_circle\r\n                                        </i>\r\n                                    }\r\n                                </div>\r\n                                <div\r\n                                    className=\"col l8 s8 m-account-name\">\r\n                                        {!!cur.firstName ? `${cur.firstName} ` : ''}\r\n                                        {!!cur.lastName ? cur.lastName : ''}\r\n                                </div>\r\n                                <div className=\"col l8 s7 m-account-username\">\r\n                                    {cur.username}\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useRef} from 'react';\r\nimport SearchedUsers from './Messages-SearchedUsers';\r\n\r\nexport default function UserSearch(props){\r\n    const [query, setQuery] = useState('');\r\n    const [hidden, setHidden] = useState(true);\r\n    const buttonRef = useRef();\r\n    const containerRef = useRef();\r\n\r\n    const handleChange = (e) => {\r\n        setQuery(e.target.value);\r\n    }\r\n\r\n    const displayButton = () => {\r\n        buttonRef.current.classList.remove('hide');\r\n        containerRef.current.classList.add('blue-bordered');\r\n        setHidden(false);\r\n    };\r\n\r\n    const hideButton = () => {\r\n        buttonRef.current.classList.add('hide');\r\n        containerRef.current.classList.remove('blue-bordered');\r\n        setQuery('');\r\n        setHidden(true);\r\n    };\r\n\r\n    return(\r\n        <React.Fragment>\r\n        \r\n            <div className=\"search-input-container\" ref={containerRef}>\r\n                <i className=\"material-icons search-icon\">search</i>\r\n                <input\r\n                    onClick={displayButton}\r\n                    onChange={handleChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Search\"\r\n                    value={query}\r\n                />\r\n                <button\r\n                    onClick={hideButton}\r\n                    ref={buttonRef}\r\n                    className=\"s-button blackbg-color hide white-text\">\r\n                        X\r\n                </button>\r\n\r\n                <br />\r\n                <SearchedUsers qData={query} hidden={hidden} reset={hideButton} />\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\n\r\nexport default function UserInfo(){\r\n    const target = useSelector(state => state.target);\r\n\r\n    return(\r\n        <div className=\"m-target-info\">\r\n            <div>\r\n                {!!target[0].profileImage\r\n                    ? <img\r\n                        src={target[0].profileImage}\r\n                        alt=\"profileimage\"\r\n                        className=\"account-image m-account-image move-up1\" \r\n                       />\r\n                    : <i className=\"material-icons m-account-icon move-up1\">account_circle</i>}\r\n            </div>\r\n            <div>\r\n                <div className=\"m-name\">\r\n                    {!!target[0].firstName ? `${target[0].firstName} ` : ''}\r\n                    {!!target[0].lastName ? `${target[0].lastName} ` : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { resetTarget } from '../actions/';\r\nimport * as firebase from 'firebase/app';\r\n\r\nexport default function Messenger(){\r\n    const isLogged = useSelector(state => state.isLogged);\r\n    const target = useSelector(state => state.target);\r\n    const [message, setMessage] = useState('');\r\n    const dispatcher = useDispatch();\r\n\r\n    const handleChange = (e) => {\r\n        setMessage(e.target.value);\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        if(message === ''){\r\n            alert('Cannot send empty messages!');\r\n            return;\r\n        } else if(!isLogged){\r\n            alert('Please login to perform this action!');\r\n            return;\r\n        }\r\n\r\n        let user = firebase.auth().currentUser;\r\n        let targetId = target[0].mainId;\r\n        const roomName = user.uid < targetId ? `chat_${user.uid}_${targetId}` : `chat_${targetId}_${user.uid}`;\r\n\r\n        let ref = firebase.firestore().collection('chatrooms').doc(roomName);\r\n        let firstTime = false;\r\n\r\n        ref.collection('roomInfo').doc('mainInfo').get().then(snap => {\r\n            if(!!snap.data()){\r\n\r\n                ref.collection('roomInfo').doc('mainInfo').set({\r\n                    lastMessageBy: user.uid,\r\n                    lastSeenBy: user.uid,\r\n                    lastMessageDate: firebase.firestore.FieldValue.serverTimestamp(),\r\n                }, {merge: true})\r\n            } else {\r\n                firstTime = true;\r\n\r\n                ref.collection('roomInfo').doc('mainInfo').set({\r\n                    members : [user.uid, targetId],\r\n                    roomName: roomName,\r\n                    created: firebase.firestore.FieldValue.serverTimestamp(),\r\n                    lastMessageBy: user.uid,\r\n                    lastSeenBy: user.uid,\r\n                    lastMessageDate: firebase.firestore.FieldValue.serverTimestamp(),\r\n                }, {merge: true})\r\n            }\r\n        })\r\n        .then(() => {\r\n        })\r\n\r\n        ref.collection('roomInfo').doc('lastMessage').set({\r\n            by: user.uid,\r\n            to: targetId,\r\n            message: message,\r\n            date : firebase.firestore.FieldValue.serverTimestamp(),\r\n        }, {merge: true})\r\n\r\n        ref.collection('messages').add({\r\n          by: user.uid,\r\n          to: targetId,\r\n          message: message,\r\n          date : firebase.firestore.FieldValue.serverTimestamp(),\r\n        }).then(() => {\r\n            if(firstTime){\r\n                dispatcher(resetTarget())\r\n            } else {\r\n                setMessage('');\r\n            }\r\n        })\r\n        \r\n        .catch(err => console.log(err.message))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"messenger-input m-flexed\">\r\n            <div>\r\n            <input \r\n                type=\"text\"\r\n                value={message}\r\n                onChange={handleChange}\r\n                className=\"m-input\"\r\n                placeholder=\"Send A Message\"\r\n            />\r\n            </div>\r\n            <button className=\"s-button\">\r\n                <i className=\"material-icons m-send-icon\" onClick={sendMessage}>send</i>\r\n            </button>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as firebase from 'firebase/app';\r\nimport { setRoom, setTarget, setUser } from '../actions/';\r\n\r\nexport default function RoomBox(props){\r\n    let isLogged = useSelector(state => state.isLogged);\r\n    let [roomData, setroomData] = useState([]);\r\n    let [lastMessage, setLastMessage] = useState([]);\r\n    const [currentUser, setCurrentUser] = useState([]);\r\n    const dispatcher = useDispatch();\r\n    const [finishedLoading, setFinishedLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        if(isLogged){\r\n            let user = firebase.auth().currentUser;\r\n            if(!!user){\r\n                firebase.firestore().collection('users').doc(user.uid).get().then(snapshot => {\r\n                    let data = snapshot.data();\r\n                    data.mainId = snapshot.id;\r\n\r\n                    setCurrentUser(data);\r\n                })\r\n\r\n                const data = props.data;\r\n                const {roomName, members} = data;\r\n\r\n                let ref = firebase.firestore().collection('chatrooms').doc(roomName).collection('roomInfo').doc('lastMessage');\r\n                let userRef = firebase.firestore().collection('users');\r\n\r\n                let mainMember = '';\r\n\r\n                // get memeber thats not the current user\r\n                // to display his profile image\r\n                for(let i = 0; i < members.length ; i++){\r\n                    if(members[i] !== user.uid){\r\n                        mainMember = members[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // user is sending himself message\r\n                // for development purposes only\r\n                if (mainMember === ''){\r\n                    mainMember = members[0];\r\n                }\r\n\r\n                ref.get().then(snapshot => {\r\n                    let messageData = snapshot.data();\r\n                    //console.log(messageData);\r\n\r\n                    userRef.doc(mainMember).get().then((snapshot) => {\r\n                        let docId = snapshot.id;\r\n                        let userData = snapshot.data();\r\n\r\n                        let {firstName, lastName} = userData;\r\n                        userData.fullName = `${!!firstName ? firstName : ''} ${!!lastName ? lastName : ''}`\r\n\r\n                        userData.mainId = docId;\r\n                        setroomData(userData);\r\n\r\n                        if(messageData.by === user.uid){\r\n                            messageData.mainBy = 'you';\r\n                        } else {\r\n                            messageData.mainBy = `${!!userData.firstName ? userData.firstName : ''} ${!!userData.lastName ? userData.lastName : ''}` ;\r\n                        }\r\n                        setLastMessage(messageData);\r\n                        setFinishedLoading(true)\r\n                    })\r\n                })\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            console.log('aborting room boxes');\r\n            abortController.abort();\r\n        }\r\n    }, [props.data, isLogged])\r\n\r\n    const chosenRoom = (data, userData) => {\r\n        if(finishedLoading === false){\r\n            return;\r\n        }\r\n        dispatcher(setRoom(data));\r\n        dispatcher(setTarget(userData))\r\n        dispatcher(setUser(currentUser))\r\n    }\r\n\r\n    return (\r\n        <div className=\"row room-container\" onClick={() => {chosenRoom(props.data, roomData)}}>\r\n            <div className=\"col l2\">\r\n                {!!roomData.profileImage\r\n                    ? <img src={roomData.profileImage} className=\"account-image\" alt=\"profileimage\" />\r\n                    : <i className=\"material-icons account-icon rounded-icon bordered\">account_circle</i>}\r\n            </div>\r\n            <div className=\"flex-columned\">\r\n                <div className=\"col l10 \">\r\n                    {!!roomData.fullName\r\n                        ? <div className=\"room-name\">{roomData.fullName}</div>\r\n                        : ''}\r\n                </div>\r\n                <div className=\"col l12 room-last-message\">\r\n                    {!!lastMessage && !!roomData\r\n                        ? <div>\r\n                                <span className=\"main-by-name\">\r\n                                    {lastMessage.mainBy}\r\n                                </span> said : {lastMessage.message}\r\n                         </div>\r\n                        : ''}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport * as firebase from 'firebase/app';\r\nimport RoomBox from './UserMessages-RoomBox';\r\n\r\nexport default function ChatRooms(){\r\n    const isLogged = useSelector(state => state.isLogged);\r\n    const [rooms, setRooms] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n        let unsub = () => {};\r\n\r\n        if(isLogged){\r\n            const user = firebase.auth().currentUser;\r\n            if(!!user){\r\n                let ref = firebase.firestore().collectionGroup('roomInfo').where('members', 'array-contains', user.uid);\r\n                \r\n                unsub = ref.onSnapshot(snapshot => {\r\n                    let arr = [];\r\n                    let docs = snapshot.docs;\r\n                    // let changes = snapshot.docChanges();\r\n                    // changes.forEach(change => {\r\n                    //     console.log(change.doc.data())\r\n                    // })\r\n                \r\n                    docs.map((doc, index) => {\r\n                \r\n                        if(!(doc.metadata.hasPendingWrites)){\r\n                            arr.push(doc.data());\r\n\r\n                            if(!(!!docs[index + 1])){\r\n                                setRooms(arr);\r\n                                //console.log(arr);\r\n                            }\r\n                        }\r\n                        return 0;\r\n                        \r\n                    })\r\n                })\r\n            }\r\n        }\r\n        \r\n        return () => {\r\n            console.log('unsubscribing from chat rooms');\r\n            unsub()\r\n            abortController.abort();\r\n        }\r\n    }, [isLogged])\r\n\r\n    return(\r\n        <div>\r\n            <React.Fragment>\r\n                {rooms.map((cur, index) => {\r\n                    return (\r\n                        <RoomBox key={index} data={cur}/>\r\n                    )\r\n                })}\r\n            </React.Fragment>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState, useRef} from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function MessageBox(props){\r\n    const message = props.data;\r\n    //const isLogged = useSelector(state => state.isLogged);\r\n    const user = useSelector(state => state.user);\r\n    const target = useSelector(state => state.target);\r\n    const [isCurrent, setIsCurrent] = useState(false);\r\n    const [profileImage, setProfileImage] = useState('');\r\n    const messageBoxRef = useRef();\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        if(user.mainId === message.by){\r\n            let image = !!user.profileImage ? user.profileImage : '';\r\n            setIsCurrent(true);\r\n            setProfileImage(image);\r\n        } else {\r\n            let image = !!target[0].profileImage ? target[0].profileImage : '';\r\n            setProfileImage(image);\r\n            setIsCurrent(false);\r\n        }\r\n\r\n        return () => {\r\n            console.log('aborting chat-messageboxes');\r\n            abortController.abort();\r\n        }\r\n    }, [user, message, target])\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div ref={messageBoxRef} className={`flex-columned ${isCurrent ? 'fix-right' : ''} message-box`}>\r\n                {!isCurrent\r\n                    ? <React.Fragment>\r\n                        {profileImage !== ''\r\n                            ? <img src={profileImage} className=\"account-image chat-image\" alt=\"userphoto\"/>\r\n                            : <i className=\"material-icons account-icon chat-image\">account_circle</i>}\r\n                    </React.Fragment>\r\n                    : ''}\r\n                <div className=\"message-text-box\">\r\n                    {message.message}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport * as firebase from 'firebase/app';\r\nimport MessageBox from './UserMessages-MessageBox';\r\n\r\nexport default function Chats(){\r\n    const room = useSelector(state => state.room);\r\n    const isLogged = useSelector(state => state.isLogged);\r\n    const [messages, setMessages] = useState([]);\r\n    console.log(room);\r\n\r\n    useEffect(() => {\r\n        let abortController = new AbortController();\r\n\r\n        if(!(!!room.roomName)){\r\n            return;\r\n        }\r\n\r\n        let unsub = () => {};\r\n\r\n        if(isLogged){\r\n            const { roomName } = room;\r\n            let ref = firebase.firestore().collection('chatrooms')\r\n                        .doc(roomName).collection('messages').orderBy('date', 'desc')\r\n        \r\n            unsub = ref.onSnapshot(snapshot => {\r\n                let docs = snapshot.docs;\r\n                let arr = [];\r\n\r\n                docs.map((cur, index) => {\r\n                    if(!cur.metadata.hasPendingWrites){\r\n                        arr.push(cur.data());\r\n\r\n                        if(!(!!docs[index + 1])){\r\n                            setMessages(arr);\r\n                            //console.log(arr);\r\n                        }\r\n                    }\r\n                    return 0;\r\n                })\r\n            })\r\n        }\r\n\r\n        return () => {\r\n            console.log('unsubscribing from chat data')\r\n            unsub()\r\n            abortController.abort();\r\n        }\r\n    }, [room, isLogged])\r\n\r\n    return(\r\n        <div className=\"chats-container\">\r\n            {messages.length > 0\r\n                ? <React.Fragment>\r\n                    {messages.map((cur, index) => {\r\n                        return(\r\n                            <MessageBox data={cur} key={index} />\r\n                        )\r\n                    })}\r\n                 </React.Fragment>\r\n                : ''}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport './styles/UserMessages.css'\r\nimport UserSearch from './UserMessages-Search';\r\nimport UserInfo from './UserInfo';\r\nimport Messenger from './UserMessages-Messenger';\r\nimport ChatRooms from './UserMessages-ChatRooms';\r\nimport Chats from './UserMessages-ChatData';\r\n\r\nexport default function UserMessages(props){\r\n    const target = useSelector(state => state.target);\r\n    const roomInfo = useSelector(state => state.room);\r\n\r\n    return(\r\n        <div>\r\n            <br />\r\n            <div className=\"center\">Messages</div>\r\n            \r\n            <div className=\"m-main-container\">\r\n                <div className='full-height m-search-container'>\r\n                    <UserSearch />\r\n                    <ChatRooms />\r\n                </div>\r\n                <div className=\"full-height full-width relativized m-chat-container\">\r\n                    {target.length > 0 ?<UserInfo /> : ''}\r\n                    {target.length > 0 && !!roomInfo ? <Chats /> : ''}\r\n                    {target.length > 0 ? <Messenger /> : ''}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"center card-panel teal lighten-2\">Chat is buggy...</div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport github from '../images/github-logo.png'\r\nimport './styles/About.css';\r\n\r\nexport default function About(){\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"center card-panel teal\">\r\n                <div className=\"a-about-text\">This is a purely educational project made for fun, to test my skills\r\n                    and as my final project for theOdinProject.\r\n                </div>\r\n                <br />\r\n                <div className=\"a-about-text\">This project is not related to Pinterest in any way.</div>\r\n                <br/>\r\n                <div className=\"center\">\r\n                    <a href=\"https://github.com/xRizwan/pinterest-clone\" rel=\"noopener noreferrer\" target=\"_blank\" >\r\n                        <img src={github} className=\"logo logo-bigger\" alt=\"github-repository\"/>\r\n                    </a>\r\n                </div>\r\n                <br/>\r\n                <div className=\"a-footer-text\">If Interested you can visit the github-repo of this project by clicking on the \r\n                        icon above.\r\n                </div>\r\n                <div className=\"a-footer-text\">\r\n                    Thanks for visiting!.\r\n                </div>\r\n            </div>\r\n\r\n            <br />\r\n            \r\n            <div className=\"center\">\r\n                <a href=\"https://xrizwan.github.io/pinterest-clone/\">\r\n                    <i className=\"material-icons a-back-key\">keyboard_backspace</i>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\nimport MainHeader from './Components/MainHeader';\nimport MainPage from './Components/MainPage';\nimport Header from './Components/Header';\nimport Settings from './Components/Settings';\nimport UserProfile from './Components/UserProfile';\nimport CreatePin from './Components/CreatePin';\nimport Main from './Components/Main';\nimport PinInfo from './Components/PinInfo';\nimport Following from './Components/Following';\nimport { useDispatch } from 'react-redux';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {loginUser, logoutUser, setUid, resetUid} from './actions/';\nimport * as firebase from 'firebase/app';\nimport UserFollowing from './Components/UserFollowing';\nimport UserFollowers from './Components/UserFollowers';\nimport Search from './Components/Search';\nimport UserMessages from './Components/UserMessages';\nimport About from './Components/About';\n\nfunction App() {\n\n  // eslint-disable-next-line\n  //const isLogged = useSelector(state => state.isLogged);\n  //const uid = useSelector(state => state.userID)\n  const dispatcher = useDispatch();\n\n  useEffect(() => {\n    let abortController = new AbortController();\n\n    firebase.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        // User is signed in.\n\n        // set loggedIn state to true\n        console.log(\"login\");\n        dispatcher(loginUser());\n        dispatcher(setUid(user.uid));\n\n      } else {\n        // No user is signed in.\n\n        // set login state to false\n        console.log(\"logout\");\n        dispatcher(logoutUser());\n        dispatcher(resetUid());\n      }\n    });\n\n    return () => {\n      console.log('aborting app');\n      abortController.abort();\n    }\n  }, [dispatcher, ])\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n\n        {/* main path for user not logged in */}\n        <Route exact path={'/'}>\n          <MainHeader />\n          <MainPage />\n        </Route>\n\n        <Route exact path={'/about'}>\n          <About />\n        </Route>\n        \n        {/* main path for user after logged in */}\n        <Route path=\"/\">\n          <Header />\n          <br />\n          \n          <Route exact path=\"/main\">\n            <Main />\n          </Route>\n\n          <Route exact path=\"/main/settings\">\n            <Settings />\n          </Route>\n          \n          <Route exact path=\"/user/:userid\">\n            <UserProfile />\n          </Route>\n\n          <Route exact path=\"/user/:userid/following\">\n            <UserFollowing />\n          </Route>\n\n          <Route exact path=\"/user/:userid/followers\">\n            <UserFollowers />\n          </Route>\n\n          <Route exact path=\"/pin/:pinid\">\n            <PinInfo />\n          </Route>\n\n          <Route exact path=\"/create-a-pin\">\n            <CreatePin />\n          </Route>\n\n          <Route exact path=\"/search/:searchid\">\n            <Search />\n          </Route>\n\n          <Route exact path=\"/messages\">\n            <UserMessages />\n          </Route>\n\n          <Route exact path=\"/following\">\n            <Following />\n          </Route>\n        </Route>\n        \n\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const logReducer = (state = false, action) => {\r\n    switch(action.type){\r\n        case \"LOG_IN\":\r\n            return true;\r\n        case \"LOG_OUT\":\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default logReducer;","const uidReducer = (state = '', action) => {\r\n    switch(action.type){\r\n        case ('SAVE'):\r\n            return action.payload;\r\n        case (\"RESET\"):\r\n            return '';\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default uidReducer;","const targetReducer = (state = [], action) => {\r\n    switch(action.type){\r\n        case \"SETTARGET\":\r\n            return [action.payload];\r\n        case \"RESETTARGET\":\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default targetReducer;","const roomReducer = (state = [], action) => {\r\n    switch(action.type){\r\n        case \"SET_ROOM\":\r\n            return action.payload;\r\n        case \"RESET_ROOM\":\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default roomReducer;","const userReducer = (state = [], action) => {\r\n    switch(action.type){\r\n        case \"SET_USER\":\r\n            return action.payload;\r\n        case \"RESET_USER\":\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import logReducer from './isLogged';\r\nimport uidReducer from './saveUID';\r\nimport targetReducer from './targetReducer';\r\nimport roomReducer from './roomReducer';\r\nimport userReducer from './userReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n    isLogged: logReducer,\r\n    userID : uidReducer,\r\n    target : targetReducer,\r\n    room: roomReducer,\r\n    user: userReducer\r\n})\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport allReducers from './reducers';\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\nReactDOM.render(\n  // <React.StrictMode>\n\n    <Provider store={store}>\n      <App />\n    </Provider>\n  //* </React.StrictMode> */\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}